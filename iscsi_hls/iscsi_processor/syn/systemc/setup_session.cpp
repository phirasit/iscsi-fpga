// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "setup_session.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic setup_session::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic setup_session::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> setup_session::ap_ST_fsm_state1 = "1";
const sc_lv<6> setup_session::ap_ST_fsm_state2 = "10";
const sc_lv<6> setup_session::ap_ST_fsm_state3 = "100";
const sc_lv<6> setup_session::ap_ST_fsm_state4 = "1000";
const sc_lv<6> setup_session::ap_ST_fsm_state5 = "10000";
const sc_lv<6> setup_session::ap_ST_fsm_state6 = "100000";
const sc_lv<32> setup_session::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> setup_session::ap_const_lv32_1 = "1";
const sc_lv<1> setup_session::ap_const_lv1_1 = "1";
const sc_lv<32> setup_session::ap_const_lv32_2 = "10";
const sc_lv<32> setup_session::ap_const_lv32_3 = "11";
const sc_lv<32> setup_session::ap_const_lv32_4 = "100";
const sc_lv<32> setup_session::ap_const_lv32_5 = "101";
const sc_lv<1> setup_session::ap_const_lv1_0 = "0";
const sc_lv<31> setup_session::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<10> setup_session::ap_const_lv10_0 = "0000000000";
const sc_lv<10> setup_session::ap_const_lv10_203 = "1000000011";
const sc_lv<10> setup_session::ap_const_lv10_200 = "1000000000";
const sc_lv<64> setup_session::ap_const_lv64_E = "1110";
const sc_lv<64> setup_session::ap_const_lv64_F = "1111";
const sc_lv<16> setup_session::ap_const_lv16_0 = "0000000000000000";
const sc_lv<31> setup_session::ap_const_lv31_1 = "1";
const sc_lv<32> setup_session::ap_const_lv32_15 = "10101";
const sc_lv<32> setup_session::ap_const_lv32_A = "1010";
const bool setup_session::ap_const_boolean_1 = true;

setup_session::setup_session(sc_module_name name) : sc_module(name), mVcdFile(0) {
    p_str1328_U = new setup_session_p_str1328("p_str1328_U");
    p_str1328_U->clk(ap_clk);
    p_str1328_U->reset(ap_rst);
    p_str1328_U->address0(p_str1328_address0);
    p_str1328_U->ce0(p_str1328_ce0);
    p_str1328_U->q0(p_str1328_q0);
    p_str1227_U = new setup_session_p_str1227("p_str1227_U");
    p_str1227_U->clk(ap_clk);
    p_str1227_U->reset(ap_rst);
    p_str1227_U->address0(p_str1227_address0);
    p_str1227_U->ce0(p_str1227_ce0);
    p_str1227_U->q0(p_str1227_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln113_1_fu_308_p2);
    sensitive << ( idx_0_i_i3_reg_154 );

    SC_METHOD(thread_add_ln113_fu_253_p2);
    sensitive << ( idx_0_i_i_reg_131 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln5_reg_344 );
    sensitive << ( icmp_ln112_reg_354 );
    sensitive << ( icmp_ln112_1_reg_381 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln114_1_fu_322_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_p_0_phi_fu_183_p6);
    sensitive << ( icmp_ln5_reg_344 );
    sensitive << ( icmp_ln112_reg_354 );
    sensitive << ( icmp_ln112_1_reg_381 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln114_1_fu_322_p2 );
    sensitive << ( p_0_reg_178 );

    SC_METHOD(thread_ap_phi_mux_storemerge_phi_fu_170_p4);
    sensitive << ( icmp_ln5_reg_344 );
    sensitive << ( icmp_ln112_reg_354 );
    sensitive << ( icmp_ln112_1_reg_381 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln114_1_fu_322_p2 );
    sensitive << ( storemerge_reg_166 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln5_reg_344 );
    sensitive << ( icmp_ln112_reg_354 );
    sensitive << ( icmp_ln112_1_reg_381 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln114_1_fu_322_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( icmp_ln5_reg_344 );
    sensitive << ( icmp_ln112_reg_354 );
    sensitive << ( icmp_ln112_1_reg_381 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln114_1_fu_322_p2 );
    sensitive << ( ap_phi_mux_p_0_phi_fu_183_p6 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_header_buffer_V_address0);
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_header_buffer_V_address1);
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_header_buffer_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_header_buffer_V_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_i_7_fu_282_p2);
    sensitive << ( i_0_i_i2_reg_143 );

    SC_METHOD(thread_i_fu_227_p2);
    sensitive << ( i_0_i_i_reg_120 );

    SC_METHOD(thread_icmp_ln112_1_fu_277_p2);
    sensitive << ( instance_data_length );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln112_1_fu_273_p1 );

    SC_METHOD(thread_icmp_ln112_fu_222_p2);
    sensitive << ( instance_data_length );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln112_fu_218_p1 );

    SC_METHOD(thread_icmp_ln113_1_fu_302_p2);
    sensitive << ( instance_data_q0 );
    sensitive << ( icmp_ln5_reg_344 );
    sensitive << ( icmp_ln112_reg_354 );
    sensitive << ( icmp_ln112_1_reg_381 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln113_3_fu_298_p1 );

    SC_METHOD(thread_icmp_ln113_fu_247_p2);
    sensitive << ( instance_data_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln113_2_fu_243_p1 );

    SC_METHOD(thread_icmp_ln114_1_fu_322_p2);
    sensitive << ( icmp_ln5_reg_344 );
    sensitive << ( icmp_ln112_reg_354 );
    sensitive << ( icmp_ln112_1_reg_381 );
    sensitive << ( idx_1_fu_314_p3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_icmp_ln114_fu_267_p2);
    sensitive << ( idx_fu_259_p3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_icmp_ln5_fu_202_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_194_p3 );

    SC_METHOD(thread_idx_1_fu_314_p3);
    sensitive << ( icmp_ln113_1_fu_302_p2 );
    sensitive << ( add_ln113_1_fu_308_p2 );

    SC_METHOD(thread_idx_fu_259_p3);
    sensitive << ( icmp_ln113_fu_247_p2 );
    sensitive << ( add_ln113_fu_253_p2 );

    SC_METHOD(thread_instance_data_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln113_fu_233_p1 );
    sensitive << ( zext_ln113_1_fu_288_p1 );

    SC_METHOD(thread_instance_data_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_instance_discovery);
    sensitive << ( icmp_ln5_reg_344 );
    sensitive << ( icmp_ln112_reg_354 );
    sensitive << ( icmp_ln112_1_reg_381 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln114_1_fu_322_p2 );
    sensitive << ( ap_phi_mux_storemerge_phi_fu_170_p4 );

    SC_METHOD(thread_instance_discovery_ap_vld);
    sensitive << ( icmp_ln5_reg_344 );
    sensitive << ( icmp_ln112_reg_354 );
    sensitive << ( icmp_ln112_1_reg_381 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln114_1_fu_322_p2 );

    SC_METHOD(thread_instance_tsih);
    sensitive << ( icmp_ln5_fu_202_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_instance_tsih_ap_vld);
    sensitive << ( icmp_ln5_fu_202_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_str1227_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln113_1_fu_293_p1 );

    SC_METHOD(thread_p_str1227_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_p_str1328_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln113_fu_238_p1 );

    SC_METHOD(thread_p_str1328_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sext_ln113_1_fu_293_p1);
    sensitive << ( idx_0_i_i3_reg_154 );

    SC_METHOD(thread_sext_ln113_fu_238_p1);
    sensitive << ( idx_0_i_i_reg_131 );

    SC_METHOD(thread_tmp_i_fu_194_p3);
    sensitive << ( header_buffer_V_q0 );
    sensitive << ( header_buffer_V_q1 );

    SC_METHOD(thread_zext_ln112_1_fu_273_p1);
    sensitive << ( i_0_i_i2_reg_143 );

    SC_METHOD(thread_zext_ln112_fu_218_p1);
    sensitive << ( i_0_i_i_reg_120 );

    SC_METHOD(thread_zext_ln113_1_fu_288_p1);
    sensitive << ( i_0_i_i2_reg_143 );

    SC_METHOD(thread_zext_ln113_2_fu_243_p1);
    sensitive << ( p_str1328_q0 );

    SC_METHOD(thread_zext_ln113_3_fu_298_p1);
    sensitive << ( p_str1227_q0 );

    SC_METHOD(thread_zext_ln113_fu_233_p1);
    sensitive << ( i_0_i_i_reg_120 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln5_fu_202_p2 );
    sensitive << ( icmp_ln5_reg_344 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln112_fu_222_p2 );
    sensitive << ( icmp_ln112_reg_354 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln112_1_reg_381 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln114_fu_267_p2 );
    sensitive << ( icmp_ln114_1_fu_322_p2 );

    ap_CS_fsm = "000001";
    ap_return_preg = "0000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "setup_session_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, header_buffer_V_address0, "(port)header_buffer_V_address0");
    sc_trace(mVcdFile, header_buffer_V_ce0, "(port)header_buffer_V_ce0");
    sc_trace(mVcdFile, header_buffer_V_q0, "(port)header_buffer_V_q0");
    sc_trace(mVcdFile, header_buffer_V_address1, "(port)header_buffer_V_address1");
    sc_trace(mVcdFile, header_buffer_V_ce1, "(port)header_buffer_V_ce1");
    sc_trace(mVcdFile, header_buffer_V_q1, "(port)header_buffer_V_q1");
    sc_trace(mVcdFile, instance_tsih, "(port)instance_tsih");
    sc_trace(mVcdFile, instance_tsih_ap_vld, "(port)instance_tsih_ap_vld");
    sc_trace(mVcdFile, instance_data_length, "(port)instance_data_length");
    sc_trace(mVcdFile, instance_data_address0, "(port)instance_data_address0");
    sc_trace(mVcdFile, instance_data_ce0, "(port)instance_data_ce0");
    sc_trace(mVcdFile, instance_data_q0, "(port)instance_data_q0");
    sc_trace(mVcdFile, instance_discovery, "(port)instance_discovery");
    sc_trace(mVcdFile, instance_discovery_ap_vld, "(port)instance_discovery_ap_vld");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_str1328_address0, "p_str1328_address0");
    sc_trace(mVcdFile, p_str1328_ce0, "p_str1328_ce0");
    sc_trace(mVcdFile, p_str1328_q0, "p_str1328_q0");
    sc_trace(mVcdFile, p_str1227_address0, "p_str1227_address0");
    sc_trace(mVcdFile, p_str1227_ce0, "p_str1227_ce0");
    sc_trace(mVcdFile, p_str1227_q0, "p_str1227_q0");
    sc_trace(mVcdFile, icmp_ln5_fu_202_p2, "icmp_ln5_fu_202_p2");
    sc_trace(mVcdFile, icmp_ln5_reg_344, "icmp_ln5_reg_344");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln112_fu_222_p2, "icmp_ln112_fu_222_p2");
    sc_trace(mVcdFile, icmp_ln112_reg_354, "icmp_ln112_reg_354");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_fu_227_p2, "i_fu_227_p2");
    sc_trace(mVcdFile, i_reg_358, "i_reg_358");
    sc_trace(mVcdFile, idx_fu_259_p3, "idx_fu_259_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln112_1_fu_277_p2, "icmp_ln112_1_fu_277_p2");
    sc_trace(mVcdFile, icmp_ln112_1_reg_381, "icmp_ln112_1_reg_381");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_7_fu_282_p2, "i_7_fu_282_p2");
    sc_trace(mVcdFile, i_7_reg_385, "i_7_reg_385");
    sc_trace(mVcdFile, idx_1_fu_314_p3, "idx_1_fu_314_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_0_i_i_reg_120, "i_0_i_i_reg_120");
    sc_trace(mVcdFile, icmp_ln114_fu_267_p2, "icmp_ln114_fu_267_p2");
    sc_trace(mVcdFile, idx_0_i_i_reg_131, "idx_0_i_i_reg_131");
    sc_trace(mVcdFile, i_0_i_i2_reg_143, "i_0_i_i2_reg_143");
    sc_trace(mVcdFile, icmp_ln114_1_fu_322_p2, "icmp_ln114_1_fu_322_p2");
    sc_trace(mVcdFile, idx_0_i_i3_reg_154, "idx_0_i_i3_reg_154");
    sc_trace(mVcdFile, ap_phi_mux_storemerge_phi_fu_170_p4, "ap_phi_mux_storemerge_phi_fu_170_p4");
    sc_trace(mVcdFile, storemerge_reg_166, "storemerge_reg_166");
    sc_trace(mVcdFile, ap_phi_mux_p_0_phi_fu_183_p6, "ap_phi_mux_p_0_phi_fu_183_p6");
    sc_trace(mVcdFile, p_0_reg_178, "p_0_reg_178");
    sc_trace(mVcdFile, zext_ln113_fu_233_p1, "zext_ln113_fu_233_p1");
    sc_trace(mVcdFile, sext_ln113_fu_238_p1, "sext_ln113_fu_238_p1");
    sc_trace(mVcdFile, zext_ln113_1_fu_288_p1, "zext_ln113_1_fu_288_p1");
    sc_trace(mVcdFile, sext_ln113_1_fu_293_p1, "sext_ln113_1_fu_293_p1");
    sc_trace(mVcdFile, tmp_i_fu_194_p3, "tmp_i_fu_194_p3");
    sc_trace(mVcdFile, zext_ln112_fu_218_p1, "zext_ln112_fu_218_p1");
    sc_trace(mVcdFile, zext_ln113_2_fu_243_p1, "zext_ln113_2_fu_243_p1");
    sc_trace(mVcdFile, icmp_ln113_fu_247_p2, "icmp_ln113_fu_247_p2");
    sc_trace(mVcdFile, add_ln113_fu_253_p2, "add_ln113_fu_253_p2");
    sc_trace(mVcdFile, zext_ln112_1_fu_273_p1, "zext_ln112_1_fu_273_p1");
    sc_trace(mVcdFile, zext_ln113_3_fu_298_p1, "zext_ln113_3_fu_298_p1");
    sc_trace(mVcdFile, icmp_ln113_1_fu_302_p2, "icmp_ln113_1_fu_302_p2");
    sc_trace(mVcdFile, add_ln113_1_fu_308_p2, "add_ln113_1_fu_308_p2");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

setup_session::~setup_session() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete p_str1328_U;
    delete p_str1227_U;
}

void setup_session::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv10_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
             (((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_1_fu_322_p2.read()) || 
                esl_seteq<1,1,1>(icmp_ln112_1_reg_381.read(), ap_const_lv1_0)) || 
               esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_reg_354.read())) || 
              esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_0)))) {
            ap_return_preg = ap_phi_mux_p_0_phi_fu_183_p6.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln112_fu_222_p2.read(), ap_const_lv1_0))) {
        i_0_i_i2_reg_143 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(icmp_ln112_reg_354.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_1_reg_381.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_1_fu_322_p2.read()))) {
        i_0_i_i2_reg_143 = i_7_reg_385.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_fu_267_p2.read()))) {
        i_0_i_i_reg_120 = i_reg_358.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln5_fu_202_p2.read(), ap_const_lv1_1))) {
        i_0_i_i_reg_120 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln112_fu_222_p2.read(), ap_const_lv1_0))) {
        idx_0_i_i3_reg_154 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(icmp_ln112_reg_354.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_1_reg_381.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_1_fu_322_p2.read()))) {
        idx_0_i_i3_reg_154 = idx_1_fu_314_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_fu_267_p2.read()))) {
        idx_0_i_i_reg_131 = idx_fu_259_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln5_fu_202_p2.read(), ap_const_lv1_1))) {
        idx_0_i_i_reg_131 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln112_1_fu_277_p2.read(), ap_const_lv1_0))) {
        p_0_reg_178 = ap_const_lv10_200;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln5_fu_202_p2.read(), ap_const_lv1_0))) {
        p_0_reg_178 = ap_const_lv10_203;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                ((esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_1_reg_381.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_1_fu_322_p2.read())) || 
                 (esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_reg_354.read()))))) {
        p_0_reg_178 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_fu_267_p2.read()))) {
        storemerge_reg_166 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(icmp_ln112_reg_354.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_1_reg_381.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_1_fu_322_p2.read()))) {
        storemerge_reg_166 = ap_const_lv1_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_7_reg_385 = i_7_fu_282_p2.read();
        icmp_ln112_1_reg_381 = icmp_ln112_1_fu_277_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_358 = i_fu_227_p2.read();
        icmp_ln112_reg_354 = icmp_ln112_fu_222_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        icmp_ln5_reg_344 = icmp_ln5_fu_202_p2.read();
    }
}

void setup_session::thread_add_ln113_1_fu_308_p2() {
    add_ln113_1_fu_308_p2 = (!idx_0_i_i3_reg_154.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(idx_0_i_i3_reg_154.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void setup_session::thread_add_ln113_fu_253_p2() {
    add_ln113_fu_253_p2 = (!idx_0_i_i_reg_131.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(idx_0_i_i_reg_131.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void setup_session::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void setup_session::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void setup_session::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void setup_session::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void setup_session::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void setup_session::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void setup_session::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          (((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_1_fu_322_p2.read()) || 
             esl_seteq<1,1,1>(icmp_ln112_1_reg_381.read(), ap_const_lv1_0)) || 
            esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_reg_354.read())) || 
           esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_0))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void setup_session::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void setup_session::thread_ap_phi_mux_p_0_phi_fu_183_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         ((esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_1) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_1_reg_381.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_1_fu_322_p2.read())) || 
          (esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_1) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_reg_354.read()))))) {
        ap_phi_mux_p_0_phi_fu_183_p6 = ap_const_lv10_0;
    } else {
        ap_phi_mux_p_0_phi_fu_183_p6 = p_0_reg_178.read();
    }
}

void setup_session::thread_ap_phi_mux_storemerge_phi_fu_170_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(icmp_ln112_reg_354.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_1_reg_381.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_1_fu_322_p2.read()))) {
        ap_phi_mux_storemerge_phi_fu_170_p4 = ap_const_lv1_0;
    } else {
        ap_phi_mux_storemerge_phi_fu_170_p4 = storemerge_reg_166.read();
    }
}

void setup_session::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         (((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_1_fu_322_p2.read()) || 
            esl_seteq<1,1,1>(icmp_ln112_1_reg_381.read(), ap_const_lv1_0)) || 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_reg_354.read())) || 
          esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void setup_session::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         (((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_1_fu_322_p2.read()) || 
            esl_seteq<1,1,1>(icmp_ln112_1_reg_381.read(), ap_const_lv1_0)) || 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_reg_354.read())) || 
          esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_0)))) {
        ap_return = ap_phi_mux_p_0_phi_fu_183_p6.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void setup_session::thread_header_buffer_V_address0() {
    header_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_E);
}

void setup_session::thread_header_buffer_V_address1() {
    header_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_F);
}

void setup_session::thread_header_buffer_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        header_buffer_V_ce0 = ap_const_logic_1;
    } else {
        header_buffer_V_ce0 = ap_const_logic_0;
    }
}

void setup_session::thread_header_buffer_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        header_buffer_V_ce1 = ap_const_logic_1;
    } else {
        header_buffer_V_ce1 = ap_const_logic_0;
    }
}

void setup_session::thread_i_7_fu_282_p2() {
    i_7_fu_282_p2 = (!i_0_i_i2_reg_143.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_0_i_i2_reg_143.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void setup_session::thread_i_fu_227_p2() {
    i_fu_227_p2 = (!i_0_i_i_reg_120.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_0_i_i_reg_120.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void setup_session::thread_icmp_ln112_1_fu_277_p2() {
    icmp_ln112_1_fu_277_p2 = (!zext_ln112_1_fu_273_p1.read().is_01() || !instance_data_length.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln112_1_fu_273_p1.read()) < sc_bigint<32>(instance_data_length.read()));
}

void setup_session::thread_icmp_ln112_fu_222_p2() {
    icmp_ln112_fu_222_p2 = (!zext_ln112_fu_218_p1.read().is_01() || !instance_data_length.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln112_fu_218_p1.read()) < sc_bigint<32>(instance_data_length.read()));
}

void setup_session::thread_icmp_ln113_1_fu_302_p2() {
    icmp_ln113_1_fu_302_p2 = (!instance_data_q0.read().is_01() || !zext_ln113_3_fu_298_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(instance_data_q0.read() == zext_ln113_3_fu_298_p1.read());
}

void setup_session::thread_icmp_ln113_fu_247_p2() {
    icmp_ln113_fu_247_p2 = (!instance_data_q0.read().is_01() || !zext_ln113_2_fu_243_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(instance_data_q0.read() == zext_ln113_2_fu_243_p1.read());
}

void setup_session::thread_icmp_ln114_1_fu_322_p2() {
    icmp_ln114_1_fu_322_p2 = (!idx_1_fu_314_p3.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): sc_lv<1>(idx_1_fu_314_p3.read() == ap_const_lv32_A);
}

void setup_session::thread_icmp_ln114_fu_267_p2() {
    icmp_ln114_fu_267_p2 = (!idx_fu_259_p3.read().is_01() || !ap_const_lv32_15.is_01())? sc_lv<1>(): sc_lv<1>(idx_fu_259_p3.read() == ap_const_lv32_15);
}

void setup_session::thread_icmp_ln5_fu_202_p2() {
    icmp_ln5_fu_202_p2 = (!tmp_i_fu_194_p3.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_i_fu_194_p3.read() == ap_const_lv16_0);
}

void setup_session::thread_idx_1_fu_314_p3() {
    idx_1_fu_314_p3 = (!icmp_ln113_1_fu_302_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln113_1_fu_302_p2.read()[0].to_bool())? add_ln113_1_fu_308_p2.read(): ap_const_lv32_0);
}

void setup_session::thread_idx_fu_259_p3() {
    idx_fu_259_p3 = (!icmp_ln113_fu_247_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln113_fu_247_p2.read()[0].to_bool())? add_ln113_fu_253_p2.read(): ap_const_lv32_0);
}

void setup_session::thread_instance_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        instance_data_address0 =  (sc_lv<13>) (zext_ln113_1_fu_288_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        instance_data_address0 =  (sc_lv<13>) (zext_ln113_fu_233_p1.read());
    } else {
        instance_data_address0 = "XXXXXXXXXXXXX";
    }
}

void setup_session::thread_instance_data_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        instance_data_ce0 = ap_const_logic_1;
    } else {
        instance_data_ce0 = ap_const_logic_0;
    }
}

void setup_session::thread_instance_discovery() {
    instance_discovery = ap_phi_mux_storemerge_phi_fu_170_p4.read();
}

void setup_session::thread_instance_discovery_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         ((esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_1) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_1_reg_381.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_1_fu_322_p2.read())) || 
          (esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_1) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_reg_354.read()))))) {
        instance_discovery_ap_vld = ap_const_logic_1;
    } else {
        instance_discovery_ap_vld = ap_const_logic_0;
    }
}

void setup_session::thread_instance_tsih() {
    instance_tsih = ap_const_lv1_1;
}

void setup_session::thread_instance_tsih_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln5_fu_202_p2.read(), ap_const_lv1_1))) {
        instance_tsih_ap_vld = ap_const_logic_1;
    } else {
        instance_tsih_ap_vld = ap_const_logic_0;
    }
}

void setup_session::thread_p_str1227_address0() {
    p_str1227_address0 =  (sc_lv<4>) (sext_ln113_1_fu_293_p1.read());
}

void setup_session::thread_p_str1227_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        p_str1227_ce0 = ap_const_logic_1;
    } else {
        p_str1227_ce0 = ap_const_logic_0;
    }
}

void setup_session::thread_p_str1328_address0() {
    p_str1328_address0 =  (sc_lv<5>) (sext_ln113_fu_238_p1.read());
}

void setup_session::thread_p_str1328_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_str1328_ce0 = ap_const_logic_1;
    } else {
        p_str1328_ce0 = ap_const_logic_0;
    }
}

void setup_session::thread_sext_ln113_1_fu_293_p1() {
    sext_ln113_1_fu_293_p1 = esl_sext<64,32>(idx_0_i_i3_reg_154.read());
}

void setup_session::thread_sext_ln113_fu_238_p1() {
    sext_ln113_fu_238_p1 = esl_sext<64,32>(idx_0_i_i_reg_131.read());
}

void setup_session::thread_tmp_i_fu_194_p3() {
    tmp_i_fu_194_p3 = esl_concat<8,8>(header_buffer_V_q0.read(), header_buffer_V_q1.read());
}

void setup_session::thread_zext_ln112_1_fu_273_p1() {
    zext_ln112_1_fu_273_p1 = esl_zext<32,31>(i_0_i_i2_reg_143.read());
}

void setup_session::thread_zext_ln112_fu_218_p1() {
    zext_ln112_fu_218_p1 = esl_zext<32,31>(i_0_i_i_reg_120.read());
}

void setup_session::thread_zext_ln113_1_fu_288_p1() {
    zext_ln113_1_fu_288_p1 = esl_zext<64,31>(i_0_i_i2_reg_143.read());
}

void setup_session::thread_zext_ln113_2_fu_243_p1() {
    zext_ln113_2_fu_243_p1 = esl_zext<8,7>(p_str1328_q0.read());
}

void setup_session::thread_zext_ln113_3_fu_298_p1() {
    zext_ln113_3_fu_298_p1 = esl_zext<8,7>(p_str1227_q0.read());
}

void setup_session::thread_zext_ln113_fu_233_p1() {
    zext_ln113_fu_233_p1 = esl_zext<64,31>(i_0_i_i_reg_120.read());
}

void setup_session::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln5_fu_202_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln112_fu_222_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_fu_267_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && (((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_1_fu_322_p2.read()) || 
    esl_seteq<1,1,1>(icmp_ln112_1_reg_381.read(), ap_const_lv1_0)) || 
   esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_reg_354.read())) || 
  esl_seteq<1,1,1>(icmp_ln5_reg_344.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

