// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _update_value_int_1_HH_
#define _update_value_int_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "update_value_int_1_p_str11.h"

namespace ap_rtl {

struct update_value_int_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > iscsi_connection_parameter_data_address0;
    sc_out< sc_logic > iscsi_connection_parameter_data_ce0;
    sc_in< sc_lv<8> > iscsi_connection_parameter_data_q0;
    sc_in< sc_lv<32> > idx;
    sc_in< sc_lv<32> > val_r_i;
    sc_out< sc_lv<32> > val_r_o;
    sc_out< sc_logic > val_r_o_ap_vld;


    // Module declarations
    update_value_int_1(sc_module_name name);
    SC_HAS_PROCESS(update_value_int_1);

    ~update_value_int_1();

    sc_trace_file* mVcdFile;

    update_value_int_1_p_str11* p_str11_U;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > p_str11_address0;
    sc_signal< sc_logic > p_str11_ce0;
    sc_signal< sc_lv<7> > p_str11_q0;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > zext_ln122_4_fu_135_p1;
    sc_signal< sc_lv<8> > zext_ln122_4_reg_246;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln122_fu_139_p2;
    sc_signal< sc_lv<1> > icmp_ln122_reg_251;
    sc_signal< sc_lv<5> > i_fu_145_p2;
    sc_signal< sc_lv<5> > i_reg_255;
    sc_signal< sc_lv<32> > add_ln132_fu_166_p2;
    sc_signal< sc_lv<32> > add_ln132_reg_268;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > iscsi_connection_par_18_reg_278;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > nw_val_fu_229_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<5> > i_0_i_reg_93;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln123_fu_161_p2;
    sc_signal< sc_lv<32> > idx_assign_0_in_reg_105;
    sc_signal< sc_lv<32> > nw_val_0_reg_114;
    sc_signal< sc_lv<64> > zext_ln122_fu_126_p1;
    sc_signal< sc_lv<64> > sext_ln123_fu_156_p1;
    sc_signal< sc_lv<64> > sext_ln134_fu_172_p1;
    sc_signal< sc_lv<1> > icmp_ln134_fu_177_p2;
    sc_signal< sc_lv<32> > select_ln136_fu_189_p3;
    sc_signal< sc_lv<32> > zext_ln122_3_fu_131_p1;
    sc_signal< sc_lv<32> > add_ln123_fu_151_p2;
    sc_signal< sc_lv<1> > icmp_ln136_fu_183_p2;
    sc_signal< sc_lv<32> > shl_ln134_fu_198_p2;
    sc_signal< sc_lv<32> > shl_ln134_4_fu_204_p2;
    sc_signal< sc_lv<9> > zext_ln134_fu_210_p1;
    sc_signal< sc_lv<9> > add_ln134_7_fu_219_p2;
    sc_signal< sc_lv<32> > sext_ln134_4_fu_225_p1;
    sc_signal< sc_lv<32> > add_ln134_fu_213_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<9> ap_const_lv9_1D0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln123_fu_151_p2();
    void thread_add_ln132_fu_166_p2();
    void thread_add_ln134_7_fu_219_p2();
    void thread_add_ln134_fu_213_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_145_p2();
    void thread_icmp_ln122_fu_139_p2();
    void thread_icmp_ln123_fu_161_p2();
    void thread_icmp_ln134_fu_177_p2();
    void thread_icmp_ln136_fu_183_p2();
    void thread_iscsi_connection_parameter_data_address0();
    void thread_iscsi_connection_parameter_data_ce0();
    void thread_nw_val_fu_229_p2();
    void thread_p_str11_address0();
    void thread_p_str11_ce0();
    void thread_select_ln136_fu_189_p3();
    void thread_sext_ln123_fu_156_p1();
    void thread_sext_ln134_4_fu_225_p1();
    void thread_sext_ln134_fu_172_p1();
    void thread_shl_ln134_4_fu_204_p2();
    void thread_shl_ln134_fu_198_p2();
    void thread_val_r_o();
    void thread_val_r_o_ap_vld();
    void thread_zext_ln122_3_fu_131_p1();
    void thread_zext_ln122_4_fu_135_p1();
    void thread_zext_ln122_fu_126_p1();
    void thread_zext_ln134_fu_210_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
