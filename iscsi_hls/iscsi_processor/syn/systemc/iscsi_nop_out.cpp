// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "iscsi_nop_out.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic iscsi_nop_out::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic iscsi_nop_out::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state1 = "1";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state2 = "10";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state3 = "100";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state4 = "1000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state5 = "10000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state6 = "100000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state7 = "1000000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state8 = "10000000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state9 = "100000000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state10 = "1000000000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state11 = "10000000000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state12 = "100000000000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<18> iscsi_nop_out::ap_ST_fsm_state18 = "100000000000000000";
const bool iscsi_nop_out::ap_const_boolean_1 = true;
const sc_lv<32> iscsi_nop_out::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_11 = "10001";
const sc_lv<1> iscsi_nop_out::ap_const_lv1_1 = "1";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_1 = "1";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_2 = "10";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_4 = "100";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_6 = "110";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_8 = "1000";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_A = "1010";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_B = "1011";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_C = "1100";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_D = "1101";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_10 = "10000";
const sc_lv<1> iscsi_nop_out::ap_const_lv1_0 = "0";
const sc_lv<6> iscsi_nop_out::ap_const_lv6_0 = "000000";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_E = "1110";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_1 = "1";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_14 = "10100";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_15 = "10101";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_16 = "10110";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_3 = "11";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_17 = "10111";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_18 = "11000";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_19 = "11001";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_1A = "11010";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_5 = "101";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_1B = "11011";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_1C = "11100";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_1D = "11101";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_1E = "11110";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_7 = "111";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_1F = "11111";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_20 = "100000";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_21 = "100001";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_22 = "100010";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_9 = "1001";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_23 = "100011";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_10 = "10000";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_11 = "10001";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_12 = "10010";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_13 = "10011";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_5 = "101";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_6 = "110";
const sc_lv<64> iscsi_nop_out::ap_const_lv64_7 = "111";
const sc_lv<8> iscsi_nop_out::ap_const_lv8_0 = "00000000";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_F = "1111";
const sc_lv<6> iscsi_nop_out::ap_const_lv6_30 = "110000";
const sc_lv<6> iscsi_nop_out::ap_const_lv6_1 = "1";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_18 = "11000";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_1F = "11111";
const sc_lv<32> iscsi_nop_out::ap_const_lv32_17 = "10111";
const sc_lv<6> iscsi_nop_out::ap_const_lv6_20 = "100000";

iscsi_nop_out::iscsi_nop_out(sc_module_name name) : sc_module(name), mVcdFile(0) {
    response_buffer_V_U = new iscsi_login_response_buffer_V("response_buffer_V_U");
    response_buffer_V_U->clk(ap_clk);
    response_buffer_V_U->reset(ap_rst);
    response_buffer_V_U->address0(response_buffer_V_address0);
    response_buffer_V_U->ce0(response_buffer_V_ce0);
    response_buffer_V_U->we0(response_buffer_V_we0);
    response_buffer_V_U->d0(response_buffer_V_d0);
    response_buffer_V_U->q0(response_buffer_V_q0);
    response_buffer_V_U->address1(response_buffer_V_address1);
    response_buffer_V_U->ce1(response_buffer_V_ce1);
    response_buffer_V_U->we1(response_buffer_V_we1);
    response_buffer_V_U->d1(response_buffer_V_d1);
    response_buffer_V_U->q1(response_buffer_V_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state18);
    sensitive << ( tcp_in_V_V_TVALID );
    sensitive << ( icmp_ln28_fu_638_p2 );

    SC_METHOD(thread_ap_block_state18_io);
    sensitive << ( tcp_out_V_V_TREADY );
    sensitive << ( icmp_ln28_fu_638_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tcp_in_V_V_TVALID );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln28_fu_638_p2 );
    sensitive << ( ap_block_state18_io );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tcp_in_V_V_TVALID );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln28_fu_638_p2 );
    sensitive << ( ap_block_state18_io );

    SC_METHOD(thread_header_buffer_V_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_header_buffer_V_address1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_header_buffer_V_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_header_buffer_V_ce1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_i_9_fu_644_p2);
    sensitive << ( i_0_reg_443 );

    SC_METHOD(thread_i_fu_460_p2);
    sensitive << ( i_0_i_i_i_reg_432 );

    SC_METHOD(thread_icmp_ln28_fu_638_p2);
    sensitive << ( tcp_in_V_V_TVALID );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln28_fu_638_p2 );
    sensitive << ( ap_block_state18_io );
    sensitive << ( i_0_reg_443 );
    sensitive << ( ret_V_fu_634_p1 );

    SC_METHOD(thread_icmp_ln35_fu_454_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_i_i_i_reg_432 );

    SC_METHOD(thread_instance_stat_sn_o);
    sensitive << ( instance_stat_sn_i );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_Val2_6_fu_475_p2 );

    SC_METHOD(thread_instance_stat_sn_o_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_p_Result_2_fu_615_p4);
    sensitive << ( p_Val2_5_reg_675 );

    SC_METHOD(thread_p_Result_s_fu_603_p5);
    sensitive << ( p_Val2_s_reg_670 );

    SC_METHOD(thread_p_Val2_6_fu_475_p2);
    sensitive << ( instance_stat_sn_i );

    SC_METHOD(thread_response_buffer_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln35_fu_454_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln35_fu_466_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_response_buffer_V_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_response_buffer_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln35_fu_454_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_response_buffer_V_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_response_buffer_V_d0);
    sensitive << ( header_buffer_V_q0 );
    sensitive << ( header_buffer_V_q1 );
    sensitive << ( instance_exp_cmd_sn );
    sensitive << ( instance_max_cmd_sn );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln35_fu_454_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln647_reg_685 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( trunc_ln647_2_reg_695 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( trunc_ln647_3_reg_705 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( p_Val2_6_fu_475_p2 );
    sensitive << ( p_Result_2_fu_615_p4 );

    SC_METHOD(thread_response_buffer_V_d1);
    sensitive << ( header_buffer_V_q0 );
    sensitive << ( header_buffer_V_q1 );
    sensitive << ( instance_exp_cmd_sn );
    sensitive << ( instance_max_cmd_sn );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_Result_7_i_i2_reg_680 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_Result_7_i8_i_reg_690 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( p_Result_7_i16_i_reg_700 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( p_Val2_6_fu_475_p2 );
    sensitive << ( p_Result_s_fu_603_p5 );

    SC_METHOD(thread_response_buffer_V_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln35_fu_454_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_response_buffer_V_we1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ret_V_fu_634_p1);
    sensitive << ( tmp_4_fu_625_p4 );

    SC_METHOD(thread_tcp_in_V_V_TDATA_blk_n);
    sensitive << ( tcp_in_V_V_TVALID );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln28_fu_638_p2 );

    SC_METHOD(thread_tcp_in_V_V_TREADY);
    sensitive << ( tcp_in_V_V_TVALID );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln28_fu_638_p2 );
    sensitive << ( ap_block_state18_io );

    SC_METHOD(thread_tcp_out_V_V_TDATA);
    sensitive << ( tcp_in_V_V_TDATA );
    sensitive << ( tcp_in_V_V_TVALID );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln28_fu_638_p2 );

    SC_METHOD(thread_tcp_out_V_V_TDATA_blk_n);
    sensitive << ( tcp_out_V_V_TREADY );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln28_fu_638_p2 );

    SC_METHOD(thread_tcp_out_V_V_TVALID);
    sensitive << ( tcp_in_V_V_TVALID );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln28_fu_638_p2 );
    sensitive << ( ap_block_state18_io );

    SC_METHOD(thread_tmp_4_fu_625_p4);
    sensitive << ( header_buffer_V_q0 );
    sensitive << ( header_buffer_V_q1 );
    sensitive << ( header_buffer_V_load_15_reg_748 );

    SC_METHOD(thread_trunc_ln647_2_fu_559_p1);
    sensitive << ( instance_exp_cmd_sn );

    SC_METHOD(thread_trunc_ln647_3_fu_599_p1);
    sensitive << ( instance_max_cmd_sn );

    SC_METHOD(thread_trunc_ln647_fu_519_p1);
    sensitive << ( p_Val2_6_fu_475_p2 );

    SC_METHOD(thread_zext_ln35_fu_466_p1);
    sensitive << ( i_0_i_i_i_reg_432 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tcp_in_V_V_TVALID );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln28_fu_638_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln35_fu_454_p2 );
    sensitive << ( ap_block_state18_io );

    ap_CS_fsm = "000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "iscsi_nop_out_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, header_buffer_V_address0, "(port)header_buffer_V_address0");
    sc_trace(mVcdFile, header_buffer_V_ce0, "(port)header_buffer_V_ce0");
    sc_trace(mVcdFile, header_buffer_V_q0, "(port)header_buffer_V_q0");
    sc_trace(mVcdFile, header_buffer_V_address1, "(port)header_buffer_V_address1");
    sc_trace(mVcdFile, header_buffer_V_ce1, "(port)header_buffer_V_ce1");
    sc_trace(mVcdFile, header_buffer_V_q1, "(port)header_buffer_V_q1");
    sc_trace(mVcdFile, tcp_in_V_V_TDATA, "(port)tcp_in_V_V_TDATA");
    sc_trace(mVcdFile, tcp_in_V_V_TVALID, "(port)tcp_in_V_V_TVALID");
    sc_trace(mVcdFile, tcp_in_V_V_TREADY, "(port)tcp_in_V_V_TREADY");
    sc_trace(mVcdFile, tcp_out_V_V_TDATA, "(port)tcp_out_V_V_TDATA");
    sc_trace(mVcdFile, tcp_out_V_V_TVALID, "(port)tcp_out_V_V_TVALID");
    sc_trace(mVcdFile, tcp_out_V_V_TREADY, "(port)tcp_out_V_V_TREADY");
    sc_trace(mVcdFile, instance_stat_sn_i, "(port)instance_stat_sn_i");
    sc_trace(mVcdFile, instance_stat_sn_o, "(port)instance_stat_sn_o");
    sc_trace(mVcdFile, instance_stat_sn_o_ap_vld, "(port)instance_stat_sn_o_ap_vld");
    sc_trace(mVcdFile, instance_exp_cmd_sn, "(port)instance_exp_cmd_sn");
    sc_trace(mVcdFile, instance_max_cmd_sn, "(port)instance_max_cmd_sn");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tcp_in_V_V_TDATA_blk_n, "tcp_in_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, icmp_ln28_fu_638_p2, "icmp_ln28_fu_638_p2");
    sc_trace(mVcdFile, tcp_out_V_V_TDATA_blk_n, "tcp_out_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, i_fu_460_p2, "i_fu_460_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln35_fu_454_p2, "icmp_ln35_fu_454_p2");
    sc_trace(mVcdFile, response_buffer_V_q0, "response_buffer_V_q0");
    sc_trace(mVcdFile, p_Val2_s_reg_670, "p_Val2_s_reg_670");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, response_buffer_V_q1, "response_buffer_V_q1");
    sc_trace(mVcdFile, p_Val2_5_reg_675, "p_Val2_5_reg_675");
    sc_trace(mVcdFile, p_Result_7_i_i2_reg_680, "p_Result_7_i_i2_reg_680");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, trunc_ln647_fu_519_p1, "trunc_ln647_fu_519_p1");
    sc_trace(mVcdFile, trunc_ln647_reg_685, "trunc_ln647_reg_685");
    sc_trace(mVcdFile, p_Result_7_i8_i_reg_690, "p_Result_7_i8_i_reg_690");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, trunc_ln647_2_fu_559_p1, "trunc_ln647_2_fu_559_p1");
    sc_trace(mVcdFile, trunc_ln647_2_reg_695, "trunc_ln647_2_reg_695");
    sc_trace(mVcdFile, p_Result_7_i16_i_reg_700, "p_Result_7_i16_i_reg_700");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, trunc_ln647_3_fu_599_p1, "trunc_ln647_3_fu_599_p1");
    sc_trace(mVcdFile, trunc_ln647_3_reg_705, "trunc_ln647_3_reg_705");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, header_buffer_V_load_15_reg_748, "header_buffer_V_load_15_reg_748");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, i_9_fu_644_p2, "i_9_fu_644_p2");
    sc_trace(mVcdFile, ap_block_state18, "ap_block_state18");
    sc_trace(mVcdFile, ap_block_state18_io, "ap_block_state18_io");
    sc_trace(mVcdFile, response_buffer_V_address0, "response_buffer_V_address0");
    sc_trace(mVcdFile, response_buffer_V_ce0, "response_buffer_V_ce0");
    sc_trace(mVcdFile, response_buffer_V_we0, "response_buffer_V_we0");
    sc_trace(mVcdFile, response_buffer_V_d0, "response_buffer_V_d0");
    sc_trace(mVcdFile, response_buffer_V_address1, "response_buffer_V_address1");
    sc_trace(mVcdFile, response_buffer_V_ce1, "response_buffer_V_ce1");
    sc_trace(mVcdFile, response_buffer_V_we1, "response_buffer_V_we1");
    sc_trace(mVcdFile, response_buffer_V_d1, "response_buffer_V_d1");
    sc_trace(mVcdFile, i_0_i_i_i_reg_432, "i_0_i_i_i_reg_432");
    sc_trace(mVcdFile, i_0_reg_443, "i_0_reg_443");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, zext_ln35_fu_466_p1, "zext_ln35_fu_466_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, p_Val2_6_fu_475_p2, "p_Val2_6_fu_475_p2");
    sc_trace(mVcdFile, p_Result_s_fu_603_p5, "p_Result_s_fu_603_p5");
    sc_trace(mVcdFile, p_Result_2_fu_615_p4, "p_Result_2_fu_615_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_4_fu_625_p4, "tmp_4_fu_625_p4");
    sc_trace(mVcdFile, ret_V_fu_634_p1, "ret_V_fu_634_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

iscsi_nop_out::~iscsi_nop_out() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete response_buffer_V_U;
}

void iscsi_nop_out::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_i_i_i_reg_432 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln35_fu_454_p2.read(), ap_const_lv1_0))) {
        i_0_i_i_i_reg_432 = i_fu_460_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tcp_in_V_V_TVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())))) {
        i_0_reg_443 = i_9_fu_644_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_0_reg_443 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        header_buffer_V_load_15_reg_748 = header_buffer_V_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        p_Result_7_i16_i_reg_700 = instance_max_cmd_sn.read().range(15, 8);
        trunc_ln647_3_reg_705 = trunc_ln647_3_fu_599_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        p_Result_7_i8_i_reg_690 = instance_exp_cmd_sn.read().range(15, 8);
        trunc_ln647_2_reg_695 = trunc_ln647_2_fu_559_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        p_Result_7_i_i2_reg_680 = p_Val2_6_fu_475_p2.read().range(15, 8);
        trunc_ln647_reg_685 = trunc_ln647_fu_519_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_Val2_5_reg_675 = response_buffer_V_q1.read();
        p_Val2_s_reg_670 = response_buffer_V_q0.read();
    }
}

void iscsi_nop_out::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void iscsi_nop_out::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void iscsi_nop_out::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void iscsi_nop_out::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void iscsi_nop_out::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void iscsi_nop_out::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void iscsi_nop_out::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void iscsi_nop_out::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void iscsi_nop_out::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void iscsi_nop_out::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void iscsi_nop_out::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void iscsi_nop_out::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void iscsi_nop_out::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void iscsi_nop_out::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void iscsi_nop_out::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void iscsi_nop_out::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void iscsi_nop_out::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void iscsi_nop_out::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void iscsi_nop_out::thread_ap_block_state18() {
    ap_block_state18 = (esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, tcp_in_V_V_TVALID.read()));
}

void iscsi_nop_out::thread_ap_block_state18_io() {
    ap_block_state18_io = (esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, tcp_out_V_V_TREADY.read()));
}

void iscsi_nop_out::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          !((esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tcp_in_V_V_TVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())) && 
          esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void iscsi_nop_out::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void iscsi_nop_out::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         !((esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tcp_in_V_V_TVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())) && 
         esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void iscsi_nop_out::thread_header_buffer_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        header_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        header_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        header_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        header_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        header_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_10);
    } else {
        header_buffer_V_address0 = "XXXXXX";
    }
}

void iscsi_nop_out::thread_header_buffer_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        header_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        header_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        header_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        header_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        header_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_12);
    } else {
        header_buffer_V_address1 = "XXXXXX";
    }
}

void iscsi_nop_out::thread_header_buffer_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        header_buffer_V_ce0 = ap_const_logic_1;
    } else {
        header_buffer_V_ce0 = ap_const_logic_0;
    }
}

void iscsi_nop_out::thread_header_buffer_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        header_buffer_V_ce1 = ap_const_logic_1;
    } else {
        header_buffer_V_ce1 = ap_const_logic_0;
    }
}

void iscsi_nop_out::thread_i_9_fu_644_p2() {
    i_9_fu_644_p2 = (!i_0_reg_443.read().is_01() || !ap_const_lv32_4.is_01())? sc_lv<32>(): (sc_biguint<32>(i_0_reg_443.read()) + sc_biguint<32>(ap_const_lv32_4));
}

void iscsi_nop_out::thread_i_fu_460_p2() {
    i_fu_460_p2 = (!i_0_i_i_i_reg_432.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_i_i_i_reg_432.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void iscsi_nop_out::thread_icmp_ln28_fu_638_p2() {
    icmp_ln28_fu_638_p2 = (!i_0_reg_443.read().is_01() || !ret_V_fu_634_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_0_reg_443.read()) < sc_bigint<32>(ret_V_fu_634_p1.read()));
}

void iscsi_nop_out::thread_icmp_ln35_fu_454_p2() {
    icmp_ln35_fu_454_p2 = (!i_0_i_i_i_reg_432.read().is_01() || !ap_const_lv6_30.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_i_i_reg_432.read() == ap_const_lv6_30);
}

void iscsi_nop_out::thread_instance_stat_sn_o() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        instance_stat_sn_o = p_Val2_6_fu_475_p2.read();
    } else {
        instance_stat_sn_o = instance_stat_sn_i.read();
    }
}

void iscsi_nop_out::thread_instance_stat_sn_o_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        instance_stat_sn_o_ap_vld = ap_const_logic_1;
    } else {
        instance_stat_sn_o_ap_vld = ap_const_logic_0;
    }
}

void iscsi_nop_out::thread_p_Result_2_fu_615_p4() {
    p_Result_2_fu_615_p4 = esl_bitset<8,8,32,1>(p_Val2_5_reg_675.read(), ap_const_lv32_7, ap_const_lv1_1);
}

void iscsi_nop_out::thread_p_Result_s_fu_603_p5() {
    p_Result_s_fu_603_p5 = esl_partset<8,8,6,32,32>(p_Val2_s_reg_670.read(), ap_const_lv6_20, ap_const_lv32_0, ap_const_lv32_5);
}

void iscsi_nop_out::thread_p_Val2_6_fu_475_p2() {
    p_Val2_6_fu_475_p2 = (!ap_const_lv32_1.is_01() || !instance_stat_sn_i.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(instance_stat_sn_i.read()));
}

void iscsi_nop_out::thread_response_buffer_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_23);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_21);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_15);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_454_p2.read()))) {
        response_buffer_V_address0 =  (sc_lv<6>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln35_fu_454_p2.read(), ap_const_lv1_0))) {
        response_buffer_V_address0 =  (sc_lv<6>) (zext_ln35_fu_466_p1.read());
    } else {
        response_buffer_V_address0 = "XXXXXX";
    }
}

void iscsi_nop_out::thread_response_buffer_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_22);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_20);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        response_buffer_V_address1 =  (sc_lv<6>) (ap_const_lv64_1);
    } else {
        response_buffer_V_address1 = "XXXXXX";
    }
}

void iscsi_nop_out::thread_response_buffer_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_454_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln35_fu_454_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        response_buffer_V_ce0 = ap_const_logic_1;
    } else {
        response_buffer_V_ce0 = ap_const_logic_0;
    }
}

void iscsi_nop_out::thread_response_buffer_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        response_buffer_V_ce1 = ap_const_logic_1;
    } else {
        response_buffer_V_ce1 = ap_const_logic_0;
    }
}

void iscsi_nop_out::thread_response_buffer_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        response_buffer_V_d0 = header_buffer_V_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        response_buffer_V_d0 = header_buffer_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        response_buffer_V_d0 = p_Result_2_fu_615_p4.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        response_buffer_V_d0 = trunc_ln647_3_reg_705.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        response_buffer_V_d0 = instance_max_cmd_sn.read().range(23, 16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        response_buffer_V_d0 = trunc_ln647_2_reg_695.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        response_buffer_V_d0 = instance_exp_cmd_sn.read().range(23, 16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        response_buffer_V_d0 = trunc_ln647_reg_685.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        response_buffer_V_d0 = p_Val2_6_fu_475_p2.read().range(23, 16);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(icmp_ln35_fu_454_p2.read(), ap_const_lv1_0)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        response_buffer_V_d0 = ap_const_lv8_0;
    } else {
        response_buffer_V_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void iscsi_nop_out::thread_response_buffer_V_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        response_buffer_V_d1 = header_buffer_V_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        response_buffer_V_d1 = header_buffer_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        response_buffer_V_d1 = p_Result_s_fu_603_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        response_buffer_V_d1 = p_Result_7_i16_i_reg_700.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        response_buffer_V_d1 = instance_max_cmd_sn.read().range(31, 24);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        response_buffer_V_d1 = p_Result_7_i8_i_reg_690.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        response_buffer_V_d1 = instance_exp_cmd_sn.read().range(31, 24);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        response_buffer_V_d1 = p_Result_7_i_i2_reg_680.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        response_buffer_V_d1 = p_Val2_6_fu_475_p2.read().range(31, 24);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        response_buffer_V_d1 = ap_const_lv8_0;
    } else {
        response_buffer_V_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void iscsi_nop_out::thread_response_buffer_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln35_fu_454_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        response_buffer_V_we0 = ap_const_logic_1;
    } else {
        response_buffer_V_we0 = ap_const_logic_0;
    }
}

void iscsi_nop_out::thread_response_buffer_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        response_buffer_V_we1 = ap_const_logic_1;
    } else {
        response_buffer_V_we1 = ap_const_logic_0;
    }
}

void iscsi_nop_out::thread_ret_V_fu_634_p1() {
    ret_V_fu_634_p1 = esl_zext<32,24>(tmp_4_fu_625_p4.read());
}

void iscsi_nop_out::thread_tcp_in_V_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1))) {
        tcp_in_V_V_TDATA_blk_n = tcp_in_V_V_TVALID.read();
    } else {
        tcp_in_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void iscsi_nop_out::thread_tcp_in_V_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tcp_in_V_V_TVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())))) {
        tcp_in_V_V_TREADY = ap_const_logic_1;
    } else {
        tcp_in_V_V_TREADY = ap_const_logic_0;
    }
}

void iscsi_nop_out::thread_tcp_out_V_V_TDATA() {
    tcp_out_V_V_TDATA = tcp_in_V_V_TDATA.read();
}

void iscsi_nop_out::thread_tcp_out_V_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1))) {
        tcp_out_V_V_TDATA_blk_n = tcp_out_V_V_TREADY.read();
    } else {
        tcp_out_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void iscsi_nop_out::thread_tcp_out_V_V_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tcp_in_V_V_TVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())))) {
        tcp_out_V_V_TVALID = ap_const_logic_1;
    } else {
        tcp_out_V_V_TVALID = ap_const_logic_0;
    }
}

void iscsi_nop_out::thread_tmp_4_fu_625_p4() {
    tmp_4_fu_625_p4 = esl_concat<16,8>(esl_concat<8,8>(header_buffer_V_load_15_reg_748.read(), header_buffer_V_q0.read()), header_buffer_V_q1.read());
}

void iscsi_nop_out::thread_trunc_ln647_2_fu_559_p1() {
    trunc_ln647_2_fu_559_p1 = instance_exp_cmd_sn.read().range(8-1, 0);
}

void iscsi_nop_out::thread_trunc_ln647_3_fu_599_p1() {
    trunc_ln647_3_fu_599_p1 = instance_max_cmd_sn.read().range(8-1, 0);
}

void iscsi_nop_out::thread_trunc_ln647_fu_519_p1() {
    trunc_ln647_fu_519_p1 = p_Val2_6_fu_475_p2.read().range(8-1, 0);
}

void iscsi_nop_out::thread_zext_ln35_fu_466_p1() {
    zext_ln35_fu_466_p1 = esl_zext<64,6>(i_0_i_i_i_reg_432.read());
}

void iscsi_nop_out::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln35_fu_454_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && !((esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tcp_in_V_V_TVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())) && esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && !((esl_seteq<1,1,1>(icmp_ln28_fu_638_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tcp_in_V_V_TVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

