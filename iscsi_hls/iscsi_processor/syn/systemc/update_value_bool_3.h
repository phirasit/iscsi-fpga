// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _update_value_bool_3_HH_
#define _update_value_bool_3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "update_value_bool_3_p_str4.h"
#include "update_value_bool_3_p_str13.h"

namespace ap_rtl {

struct update_value_bool_3 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > iscsi_connection_parameter_data_address0;
    sc_out< sc_logic > iscsi_connection_parameter_data_ce0;
    sc_in< sc_lv<8> > iscsi_connection_parameter_data_q0;
    sc_in< sc_lv<32> > idx;
    sc_in< sc_lv<32> > val_r_i;
    sc_out< sc_lv<32> > val_r_o;
    sc_out< sc_logic > val_r_o_ap_vld;


    // Module declarations
    update_value_bool_3(sc_module_name name);
    SC_HAS_PROCESS(update_value_bool_3);

    ~update_value_bool_3();

    sc_trace_file* mVcdFile;

    update_value_bool_3_p_str4* p_str4_U;
    update_value_bool_3_p_str13* p_str13_U;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > p_str4_address0;
    sc_signal< sc_logic > p_str4_ce0;
    sc_signal< sc_lv<7> > p_str4_q0;
    sc_signal< sc_lv<2> > p_str13_address0;
    sc_signal< sc_logic > p_str13_ce0;
    sc_signal< sc_lv<7> > p_str13_q0;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > zext_ln122_8_fu_165_p1;
    sc_signal< sc_lv<8> > zext_ln122_8_reg_276;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln122_fu_169_p2;
    sc_signal< sc_lv<1> > icmp_ln122_reg_281;
    sc_signal< sc_lv<4> > i_fu_175_p2;
    sc_signal< sc_lv<4> > i_reg_285;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > zext_ln122_9_fu_201_p1;
    sc_signal< sc_lv<8> > zext_ln122_9_reg_303;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln122_1_fu_205_p2;
    sc_signal< sc_lv<1> > icmp_ln122_1_reg_308;
    sc_signal< sc_lv<2> > i_3_fu_211_p2;
    sc_signal< sc_lv<2> > i_3_reg_312;
    sc_signal< sc_lv<4> > i_0_i_reg_120;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln123_fu_191_p2;
    sc_signal< sc_lv<2> > i_0_i1_reg_132;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln123_1_fu_231_p2;
    sc_signal< sc_lv<1> > ap_phi_mux_p_0_i12_phi_fu_148_p4;
    sc_signal< sc_lv<1> > p_0_i12_reg_144;
    sc_signal< sc_lv<64> > zext_ln122_fu_156_p1;
    sc_signal< sc_lv<64> > sext_ln123_fu_186_p1;
    sc_signal< sc_lv<64> > zext_ln122_1_fu_196_p1;
    sc_signal< sc_lv<64> > sext_ln123_3_fu_226_p1;
    sc_signal< sc_lv<32> > or_ln_fu_256_p3;
    sc_signal< sc_lv<32> > zext_ln122_7_fu_161_p1;
    sc_signal< sc_lv<32> > add_ln123_fu_181_p2;
    sc_signal< sc_lv<32> > zext_ln123_fu_217_p1;
    sc_signal< sc_lv<32> > add_ln123_1_fu_221_p2;
    sc_signal< sc_lv<1> > trunc_ln145_fu_236_p1;
    sc_signal< sc_lv<31> > tmp_2_fu_246_p4;
    sc_signal< sc_lv<1> > or_ln145_fu_240_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln123_1_fu_221_p2();
    void thread_add_ln123_fu_181_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_p_0_i12_phi_fu_148_p4();
    void thread_ap_ready();
    void thread_i_3_fu_211_p2();
    void thread_i_fu_175_p2();
    void thread_icmp_ln122_1_fu_205_p2();
    void thread_icmp_ln122_fu_169_p2();
    void thread_icmp_ln123_1_fu_231_p2();
    void thread_icmp_ln123_fu_191_p2();
    void thread_iscsi_connection_parameter_data_address0();
    void thread_iscsi_connection_parameter_data_ce0();
    void thread_or_ln145_fu_240_p2();
    void thread_or_ln_fu_256_p3();
    void thread_p_str13_address0();
    void thread_p_str13_ce0();
    void thread_p_str4_address0();
    void thread_p_str4_ce0();
    void thread_sext_ln123_3_fu_226_p1();
    void thread_sext_ln123_fu_186_p1();
    void thread_tmp_2_fu_246_p4();
    void thread_trunc_ln145_fu_236_p1();
    void thread_val_r_o();
    void thread_val_r_o_ap_vld();
    void thread_zext_ln122_1_fu_196_p1();
    void thread_zext_ln122_7_fu_161_p1();
    void thread_zext_ln122_8_fu_165_p1();
    void thread_zext_ln122_9_fu_201_p1();
    void thread_zext_ln122_fu_156_p1();
    void thread_zext_ln123_fu_217_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
