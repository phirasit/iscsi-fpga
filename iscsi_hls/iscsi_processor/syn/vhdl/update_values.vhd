-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity update_values is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    iscsi_connection_parameter_max_receive_data_segment_length_i : IN STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_max_receive_data_segment_length_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_max_receive_data_segment_length_o_ap_vld : OUT STD_LOGIC;
    iscsi_connection_parameter_max_connections_i : IN STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_max_connections_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_max_connections_o_ap_vld : OUT STD_LOGIC;
    iscsi_connection_parameter_initial_r2t_i : IN STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_initial_r2t_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_initial_r2t_o_ap_vld : OUT STD_LOGIC;
    iscsi_connection_parameter_immediate_data_i : IN STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_immediate_data_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_immediate_data_o_ap_vld : OUT STD_LOGIC;
    iscsi_connection_parameter_max_burst_length_i : IN STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_max_burst_length_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_max_burst_length_o_ap_vld : OUT STD_LOGIC;
    iscsi_connection_parameter_first_burst_length_i : IN STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_first_burst_length_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_first_burst_length_o_ap_vld : OUT STD_LOGIC;
    iscsi_connection_parameter_data_pdu_in_order_i : IN STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_data_pdu_in_order_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_data_pdu_in_order_o_ap_vld : OUT STD_LOGIC;
    iscsi_connection_parameter_data_sequence_in_order_i : IN STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_data_sequence_in_order_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_data_sequence_in_order_o_ap_vld : OUT STD_LOGIC;
    iscsi_connection_parameter_default_time_2_wait_i : IN STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_default_time_2_wait_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_default_time_2_wait_o_ap_vld : OUT STD_LOGIC;
    iscsi_connection_parameter_default_time_2_retain_i : IN STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_default_time_2_retain_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_default_time_2_retain_o_ap_vld : OUT STD_LOGIC;
    iscsi_connection_parameter_max_outstanding_r2t_i : IN STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_max_outstanding_r2t_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    iscsi_connection_parameter_max_outstanding_r2t_o_ap_vld : OUT STD_LOGIC;
    iscsi_connection_parameter_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    iscsi_connection_parameter_data_ce0 : OUT STD_LOGIC;
    iscsi_connection_parameter_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    iscsi_connection_parameter_data_length_read : IN STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of update_values is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_str36_ce0 : STD_LOGIC;
    signal p_str36_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str6_ce0 : STD_LOGIC;
    signal p_str6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str7_ce0 : STD_LOGIC;
    signal p_str7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str10_ce0 : STD_LOGIC;
    signal p_str10_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_307_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal icmp_ln162_reg_373 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln162_1_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln148_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln148_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal icmp_ln162_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_update_value_int_2_fu_180_ap_start : STD_LOGIC;
    signal grp_update_value_int_2_fu_180_ap_done : STD_LOGIC;
    signal grp_update_value_int_2_fu_180_ap_idle : STD_LOGIC;
    signal grp_update_value_int_2_fu_180_ap_ready : STD_LOGIC;
    signal grp_update_value_int_2_fu_180_iscsi_connection_parameter_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_update_value_int_2_fu_180_iscsi_connection_parameter_data_ce0 : STD_LOGIC;
    signal grp_update_value_int_2_fu_180_key_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_update_value_int_2_fu_180_key_ce0 : STD_LOGIC;
    signal grp_update_value_int_2_fu_180_key_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_update_value_int_2_fu_180_val_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_value_int_2_fu_180_keep_max : STD_LOGIC;
    signal grp_update_value_int_2_fu_180_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_value_int_3_fu_199_ap_start : STD_LOGIC;
    signal grp_update_value_int_3_fu_199_ap_done : STD_LOGIC;
    signal grp_update_value_int_3_fu_199_ap_idle : STD_LOGIC;
    signal grp_update_value_int_3_fu_199_ap_ready : STD_LOGIC;
    signal grp_update_value_int_3_fu_199_iscsi_connection_parameter_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_update_value_int_3_fu_199_iscsi_connection_parameter_data_ce0 : STD_LOGIC;
    signal grp_update_value_int_3_fu_199_key_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_value_int_3_fu_199_key_ce0 : STD_LOGIC;
    signal grp_update_value_int_3_fu_199_key_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_update_value_int_3_fu_199_val_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_value_int_3_fu_199_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_value_int_4_fu_215_ap_start : STD_LOGIC;
    signal grp_update_value_int_4_fu_215_ap_done : STD_LOGIC;
    signal grp_update_value_int_4_fu_215_ap_idle : STD_LOGIC;
    signal grp_update_value_int_4_fu_215_ap_ready : STD_LOGIC;
    signal grp_update_value_int_4_fu_215_iscsi_connection_parameter_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_update_value_int_4_fu_215_iscsi_connection_parameter_data_ce0 : STD_LOGIC;
    signal grp_update_value_int_4_fu_215_val_r_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_value_int_4_fu_215_val_r_o_ap_vld : STD_LOGIC;
    signal grp_update_value_int_1_fu_227_ap_start : STD_LOGIC;
    signal grp_update_value_int_1_fu_227_ap_done : STD_LOGIC;
    signal grp_update_value_int_1_fu_227_ap_idle : STD_LOGIC;
    signal grp_update_value_int_1_fu_227_ap_ready : STD_LOGIC;
    signal grp_update_value_int_1_fu_227_iscsi_connection_parameter_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_update_value_int_1_fu_227_iscsi_connection_parameter_data_ce0 : STD_LOGIC;
    signal grp_update_value_int_1_fu_227_val_r_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_value_int_1_fu_227_val_r_o_ap_vld : STD_LOGIC;
    signal grp_update_value_int_fu_239_ap_start : STD_LOGIC;
    signal grp_update_value_int_fu_239_ap_done : STD_LOGIC;
    signal grp_update_value_int_fu_239_ap_idle : STD_LOGIC;
    signal grp_update_value_int_fu_239_ap_ready : STD_LOGIC;
    signal grp_update_value_int_fu_239_iscsi_connection_parameter_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_update_value_int_fu_239_iscsi_connection_parameter_data_ce0 : STD_LOGIC;
    signal grp_update_value_int_fu_239_val_r_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_value_int_fu_239_val_r_o_ap_vld : STD_LOGIC;
    signal grp_update_value_bool_fu_251_ap_start : STD_LOGIC;
    signal grp_update_value_bool_fu_251_ap_done : STD_LOGIC;
    signal grp_update_value_bool_fu_251_ap_idle : STD_LOGIC;
    signal grp_update_value_bool_fu_251_ap_ready : STD_LOGIC;
    signal grp_update_value_bool_fu_251_iscsi_connection_parameter_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_update_value_bool_fu_251_iscsi_connection_parameter_data_ce0 : STD_LOGIC;
    signal grp_update_value_bool_fu_251_val_r_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_value_bool_fu_251_val_r_o_ap_vld : STD_LOGIC;
    signal grp_update_value_bool_3_fu_265_ap_start : STD_LOGIC;
    signal grp_update_value_bool_3_fu_265_ap_done : STD_LOGIC;
    signal grp_update_value_bool_3_fu_265_ap_idle : STD_LOGIC;
    signal grp_update_value_bool_3_fu_265_ap_ready : STD_LOGIC;
    signal grp_update_value_bool_3_fu_265_iscsi_connection_parameter_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_update_value_bool_3_fu_265_iscsi_connection_parameter_data_ce0 : STD_LOGIC;
    signal grp_update_value_bool_3_fu_265_val_r_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_value_bool_3_fu_265_val_r_o_ap_vld : STD_LOGIC;
    signal grp_update_value_bool_2_fu_279_ap_start : STD_LOGIC;
    signal grp_update_value_bool_2_fu_279_ap_done : STD_LOGIC;
    signal grp_update_value_bool_2_fu_279_ap_idle : STD_LOGIC;
    signal grp_update_value_bool_2_fu_279_ap_ready : STD_LOGIC;
    signal grp_update_value_bool_2_fu_279_iscsi_connection_parameter_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_update_value_bool_2_fu_279_iscsi_connection_parameter_data_ce0 : STD_LOGIC;
    signal grp_update_value_bool_2_fu_279_val_r_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_value_bool_2_fu_279_val_r_o_ap_vld : STD_LOGIC;
    signal grp_update_value_bool_1_fu_293_ap_start : STD_LOGIC;
    signal grp_update_value_bool_1_fu_293_ap_done : STD_LOGIC;
    signal grp_update_value_bool_1_fu_293_ap_idle : STD_LOGIC;
    signal grp_update_value_bool_1_fu_293_ap_ready : STD_LOGIC;
    signal grp_update_value_bool_1_fu_293_iscsi_connection_parameter_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_update_value_bool_1_fu_293_iscsi_connection_parameter_data_ce0 : STD_LOGIC;
    signal grp_update_value_bool_1_fu_293_val_r_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_value_bool_1_fu_293_val_r_o_ap_vld : STD_LOGIC;
    signal i_0_reg_157 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_169 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_update_value_int_2_fu_180_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_update_value_int_3_fu_199_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_update_value_int_4_fu_215_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln149_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_update_value_int_1_fu_227_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_update_value_int_fu_239_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_update_value_bool_fu_251_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_update_value_bool_3_fu_265_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_update_value_bool_2_fu_279_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_update_value_bool_1_fu_293_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal sext_ln162_fu_333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);

    component update_value_int_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        iscsi_connection_parameter_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        iscsi_connection_parameter_data_ce0 : OUT STD_LOGIC;
        iscsi_connection_parameter_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        idx : IN STD_LOGIC_VECTOR (31 downto 0);
        key_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        key_ce0 : OUT STD_LOGIC;
        key_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        val_read : IN STD_LOGIC_VECTOR (31 downto 0);
        keep_max : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component update_value_int_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        iscsi_connection_parameter_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        iscsi_connection_parameter_data_ce0 : OUT STD_LOGIC;
        iscsi_connection_parameter_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        idx : IN STD_LOGIC_VECTOR (31 downto 0);
        key_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        key_ce0 : OUT STD_LOGIC;
        key_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        val_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component update_value_int_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        iscsi_connection_parameter_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        iscsi_connection_parameter_data_ce0 : OUT STD_LOGIC;
        iscsi_connection_parameter_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        idx : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_i : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        val_r_o_ap_vld : OUT STD_LOGIC );
    end component;


    component update_value_int_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        iscsi_connection_parameter_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        iscsi_connection_parameter_data_ce0 : OUT STD_LOGIC;
        iscsi_connection_parameter_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        idx : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_i : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        val_r_o_ap_vld : OUT STD_LOGIC );
    end component;


    component update_value_int IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        iscsi_connection_parameter_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        iscsi_connection_parameter_data_ce0 : OUT STD_LOGIC;
        iscsi_connection_parameter_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        idx : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_i : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        val_r_o_ap_vld : OUT STD_LOGIC );
    end component;


    component update_value_bool IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        iscsi_connection_parameter_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        iscsi_connection_parameter_data_ce0 : OUT STD_LOGIC;
        iscsi_connection_parameter_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        idx : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_i : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        val_r_o_ap_vld : OUT STD_LOGIC );
    end component;


    component update_value_bool_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        iscsi_connection_parameter_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        iscsi_connection_parameter_data_ce0 : OUT STD_LOGIC;
        iscsi_connection_parameter_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        idx : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_i : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        val_r_o_ap_vld : OUT STD_LOGIC );
    end component;


    component update_value_bool_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        iscsi_connection_parameter_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        iscsi_connection_parameter_data_ce0 : OUT STD_LOGIC;
        iscsi_connection_parameter_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        idx : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_i : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        val_r_o_ap_vld : OUT STD_LOGIC );
    end component;


    component update_value_bool_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        iscsi_connection_parameter_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        iscsi_connection_parameter_data_ce0 : OUT STD_LOGIC;
        iscsi_connection_parameter_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        idx : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_i : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        val_r_o_ap_vld : OUT STD_LOGIC );
    end component;


    component update_values_p_str36 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component update_values_p_str6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component update_values_p_str7 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component update_values_p_str10 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    p_str36_U : component update_values_p_str36
    generic map (
        DataWidth => 8,
        AddressRange => 15,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_update_value_int_3_fu_199_key_address0,
        ce0 => p_str36_ce0,
        q0 => p_str36_q0);

    p_str6_U : component update_values_p_str6
    generic map (
        DataWidth => 8,
        AddressRange => 15,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_update_value_int_3_fu_199_key_address0,
        ce0 => p_str6_ce0,
        q0 => p_str6_q0);

    p_str7_U : component update_values_p_str7
    generic map (
        DataWidth => 8,
        AddressRange => 17,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_update_value_int_2_fu_180_key_address0,
        ce0 => p_str7_ce0,
        q0 => p_str7_q0);

    p_str10_U : component update_values_p_str10
    generic map (
        DataWidth => 8,
        AddressRange => 17,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_update_value_int_2_fu_180_key_address0,
        ce0 => p_str10_ce0,
        q0 => p_str10_q0);

    grp_update_value_int_2_fu_180 : component update_value_int_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_update_value_int_2_fu_180_ap_start,
        ap_done => grp_update_value_int_2_fu_180_ap_done,
        ap_idle => grp_update_value_int_2_fu_180_ap_idle,
        ap_ready => grp_update_value_int_2_fu_180_ap_ready,
        iscsi_connection_parameter_data_address0 => grp_update_value_int_2_fu_180_iscsi_connection_parameter_data_address0,
        iscsi_connection_parameter_data_ce0 => grp_update_value_int_2_fu_180_iscsi_connection_parameter_data_ce0,
        iscsi_connection_parameter_data_q0 => iscsi_connection_parameter_data_q0,
        idx => i_0_reg_157,
        key_address0 => grp_update_value_int_2_fu_180_key_address0,
        key_ce0 => grp_update_value_int_2_fu_180_key_ce0,
        key_q0 => grp_update_value_int_2_fu_180_key_q0,
        val_read => grp_update_value_int_2_fu_180_val_read,
        keep_max => grp_update_value_int_2_fu_180_keep_max,
        ap_return => grp_update_value_int_2_fu_180_ap_return);

    grp_update_value_int_3_fu_199 : component update_value_int_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_update_value_int_3_fu_199_ap_start,
        ap_done => grp_update_value_int_3_fu_199_ap_done,
        ap_idle => grp_update_value_int_3_fu_199_ap_idle,
        ap_ready => grp_update_value_int_3_fu_199_ap_ready,
        iscsi_connection_parameter_data_address0 => grp_update_value_int_3_fu_199_iscsi_connection_parameter_data_address0,
        iscsi_connection_parameter_data_ce0 => grp_update_value_int_3_fu_199_iscsi_connection_parameter_data_ce0,
        iscsi_connection_parameter_data_q0 => iscsi_connection_parameter_data_q0,
        idx => i_0_reg_157,
        key_address0 => grp_update_value_int_3_fu_199_key_address0,
        key_ce0 => grp_update_value_int_3_fu_199_key_ce0,
        key_q0 => grp_update_value_int_3_fu_199_key_q0,
        val_read => grp_update_value_int_3_fu_199_val_read,
        ap_return => grp_update_value_int_3_fu_199_ap_return);

    grp_update_value_int_4_fu_215 : component update_value_int_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_update_value_int_4_fu_215_ap_start,
        ap_done => grp_update_value_int_4_fu_215_ap_done,
        ap_idle => grp_update_value_int_4_fu_215_ap_idle,
        ap_ready => grp_update_value_int_4_fu_215_ap_ready,
        iscsi_connection_parameter_data_address0 => grp_update_value_int_4_fu_215_iscsi_connection_parameter_data_address0,
        iscsi_connection_parameter_data_ce0 => grp_update_value_int_4_fu_215_iscsi_connection_parameter_data_ce0,
        iscsi_connection_parameter_data_q0 => iscsi_connection_parameter_data_q0,
        idx => i_0_reg_157,
        val_r_i => iscsi_connection_parameter_max_receive_data_segment_length_i,
        val_r_o => grp_update_value_int_4_fu_215_val_r_o,
        val_r_o_ap_vld => grp_update_value_int_4_fu_215_val_r_o_ap_vld);

    grp_update_value_int_1_fu_227 : component update_value_int_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_update_value_int_1_fu_227_ap_start,
        ap_done => grp_update_value_int_1_fu_227_ap_done,
        ap_idle => grp_update_value_int_1_fu_227_ap_idle,
        ap_ready => grp_update_value_int_1_fu_227_ap_ready,
        iscsi_connection_parameter_data_address0 => grp_update_value_int_1_fu_227_iscsi_connection_parameter_data_address0,
        iscsi_connection_parameter_data_ce0 => grp_update_value_int_1_fu_227_iscsi_connection_parameter_data_ce0,
        iscsi_connection_parameter_data_q0 => iscsi_connection_parameter_data_q0,
        idx => i_0_reg_157,
        val_r_i => iscsi_connection_parameter_default_time_2_retain_i,
        val_r_o => grp_update_value_int_1_fu_227_val_r_o,
        val_r_o_ap_vld => grp_update_value_int_1_fu_227_val_r_o_ap_vld);

    grp_update_value_int_fu_239 : component update_value_int
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_update_value_int_fu_239_ap_start,
        ap_done => grp_update_value_int_fu_239_ap_done,
        ap_idle => grp_update_value_int_fu_239_ap_idle,
        ap_ready => grp_update_value_int_fu_239_ap_ready,
        iscsi_connection_parameter_data_address0 => grp_update_value_int_fu_239_iscsi_connection_parameter_data_address0,
        iscsi_connection_parameter_data_ce0 => grp_update_value_int_fu_239_iscsi_connection_parameter_data_ce0,
        iscsi_connection_parameter_data_q0 => iscsi_connection_parameter_data_q0,
        idx => i_0_reg_157,
        val_r_i => iscsi_connection_parameter_max_outstanding_r2t_i,
        val_r_o => grp_update_value_int_fu_239_val_r_o,
        val_r_o_ap_vld => grp_update_value_int_fu_239_val_r_o_ap_vld);

    grp_update_value_bool_fu_251 : component update_value_bool
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_update_value_bool_fu_251_ap_start,
        ap_done => grp_update_value_bool_fu_251_ap_done,
        ap_idle => grp_update_value_bool_fu_251_ap_idle,
        ap_ready => grp_update_value_bool_fu_251_ap_ready,
        iscsi_connection_parameter_data_address0 => grp_update_value_bool_fu_251_iscsi_connection_parameter_data_address0,
        iscsi_connection_parameter_data_ce0 => grp_update_value_bool_fu_251_iscsi_connection_parameter_data_ce0,
        iscsi_connection_parameter_data_q0 => iscsi_connection_parameter_data_q0,
        idx => i_0_reg_157,
        val_r_i => iscsi_connection_parameter_data_sequence_in_order_i,
        val_r_o => grp_update_value_bool_fu_251_val_r_o,
        val_r_o_ap_vld => grp_update_value_bool_fu_251_val_r_o_ap_vld);

    grp_update_value_bool_3_fu_265 : component update_value_bool_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_update_value_bool_3_fu_265_ap_start,
        ap_done => grp_update_value_bool_3_fu_265_ap_done,
        ap_idle => grp_update_value_bool_3_fu_265_ap_idle,
        ap_ready => grp_update_value_bool_3_fu_265_ap_ready,
        iscsi_connection_parameter_data_address0 => grp_update_value_bool_3_fu_265_iscsi_connection_parameter_data_address0,
        iscsi_connection_parameter_data_ce0 => grp_update_value_bool_3_fu_265_iscsi_connection_parameter_data_ce0,
        iscsi_connection_parameter_data_q0 => iscsi_connection_parameter_data_q0,
        idx => i_0_reg_157,
        val_r_i => iscsi_connection_parameter_initial_r2t_i,
        val_r_o => grp_update_value_bool_3_fu_265_val_r_o,
        val_r_o_ap_vld => grp_update_value_bool_3_fu_265_val_r_o_ap_vld);

    grp_update_value_bool_2_fu_279 : component update_value_bool_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_update_value_bool_2_fu_279_ap_start,
        ap_done => grp_update_value_bool_2_fu_279_ap_done,
        ap_idle => grp_update_value_bool_2_fu_279_ap_idle,
        ap_ready => grp_update_value_bool_2_fu_279_ap_ready,
        iscsi_connection_parameter_data_address0 => grp_update_value_bool_2_fu_279_iscsi_connection_parameter_data_address0,
        iscsi_connection_parameter_data_ce0 => grp_update_value_bool_2_fu_279_iscsi_connection_parameter_data_ce0,
        iscsi_connection_parameter_data_q0 => iscsi_connection_parameter_data_q0,
        idx => i_0_reg_157,
        val_r_i => iscsi_connection_parameter_immediate_data_i,
        val_r_o => grp_update_value_bool_2_fu_279_val_r_o,
        val_r_o_ap_vld => grp_update_value_bool_2_fu_279_val_r_o_ap_vld);

    grp_update_value_bool_1_fu_293 : component update_value_bool_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_update_value_bool_1_fu_293_ap_start,
        ap_done => grp_update_value_bool_1_fu_293_ap_done,
        ap_idle => grp_update_value_bool_1_fu_293_ap_idle,
        ap_ready => grp_update_value_bool_1_fu_293_ap_ready,
        iscsi_connection_parameter_data_address0 => grp_update_value_bool_1_fu_293_iscsi_connection_parameter_data_address0,
        iscsi_connection_parameter_data_ce0 => grp_update_value_bool_1_fu_293_iscsi_connection_parameter_data_ce0,
        iscsi_connection_parameter_data_q0 => iscsi_connection_parameter_data_q0,
        idx => i_0_reg_157,
        val_r_i => iscsi_connection_parameter_data_pdu_in_order_i,
        val_r_o => grp_update_value_bool_1_fu_293_val_r_o,
        val_r_o_ap_vld => grp_update_value_bool_1_fu_293_val_r_o_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_update_value_bool_1_fu_293_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_update_value_bool_1_fu_293_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_update_value_bool_1_fu_293_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_update_value_bool_1_fu_293_ap_ready = ap_const_logic_1)) then 
                    grp_update_value_bool_1_fu_293_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_update_value_bool_2_fu_279_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_update_value_bool_2_fu_279_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_update_value_bool_2_fu_279_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_update_value_bool_2_fu_279_ap_ready = ap_const_logic_1)) then 
                    grp_update_value_bool_2_fu_279_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_update_value_bool_3_fu_265_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_update_value_bool_3_fu_265_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_update_value_bool_3_fu_265_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_update_value_bool_3_fu_265_ap_ready = ap_const_logic_1)) then 
                    grp_update_value_bool_3_fu_265_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_update_value_bool_fu_251_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_update_value_bool_fu_251_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_update_value_bool_fu_251_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_update_value_bool_fu_251_ap_ready = ap_const_logic_1)) then 
                    grp_update_value_bool_fu_251_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_update_value_int_1_fu_227_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_update_value_int_1_fu_227_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    grp_update_value_int_1_fu_227_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_update_value_int_1_fu_227_ap_ready = ap_const_logic_1)) then 
                    grp_update_value_int_1_fu_227_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_update_value_int_2_fu_180_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_update_value_int_2_fu_180_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    grp_update_value_int_2_fu_180_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_update_value_int_2_fu_180_ap_ready = ap_const_logic_1)) then 
                    grp_update_value_int_2_fu_180_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_update_value_int_3_fu_199_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_update_value_int_3_fu_199_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_update_value_int_3_fu_199_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_update_value_int_3_fu_199_ap_ready = ap_const_logic_1)) then 
                    grp_update_value_int_3_fu_199_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_update_value_int_4_fu_215_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_update_value_int_4_fu_215_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln149_fu_323_p2 = ap_const_lv1_1))) then 
                    grp_update_value_int_4_fu_215_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_update_value_int_4_fu_215_ap_ready = ap_const_logic_1)) then 
                    grp_update_value_int_4_fu_215_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_update_value_int_fu_239_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_update_value_int_fu_239_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    grp_update_value_int_fu_239_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_update_value_int_fu_239_ap_ready = ap_const_logic_1)) then 
                    grp_update_value_int_fu_239_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) and ((icmp_ln162_1_fu_338_p2 = ap_const_lv1_1) or (icmp_ln162_reg_373 = ap_const_lv1_0)))) then 
                i_0_reg_157 <= grp_fu_307_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_157 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_1_reg_169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln162_1_fu_338_p2 = ap_const_lv1_0) and (icmp_ln162_reg_373 = ap_const_lv1_1))) then 
                i_1_reg_169 <= grp_fu_307_p2;
            elsif (((grp_update_value_int_fu_239_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                i_1_reg_169 <= i_0_reg_157;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                icmp_ln162_reg_373 <= icmp_ln162_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    zext_ln148_reg_344(23 downto 0) <= zext_ln148_fu_319_p1(23 downto 0);
            end if;
        end if;
    end process;
    zext_ln148_reg_344(31 downto 24) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state25, icmp_ln162_reg_373, icmp_ln162_1_fu_338_p2, grp_update_value_int_2_fu_180_ap_done, grp_update_value_int_3_fu_199_ap_done, grp_update_value_int_4_fu_215_ap_done, grp_update_value_int_1_fu_227_ap_done, grp_update_value_int_fu_239_ap_done, grp_update_value_bool_fu_251_ap_done, grp_update_value_bool_3_fu_265_ap_done, grp_update_value_bool_2_fu_279_ap_done, grp_update_value_bool_1_fu_293_ap_done, ap_CS_fsm_state23, ap_CS_fsm_state13, ap_CS_fsm_state19, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state2, icmp_ln149_fu_323_p2, ap_CS_fsm_state3, ap_CS_fsm_state21, ap_CS_fsm_state17, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln149_fu_323_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_update_value_int_4_fu_215_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_update_value_int_3_fu_199_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_update_value_bool_3_fu_265_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_update_value_bool_2_fu_279_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_update_value_int_3_fu_199_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_update_value_int_2_fu_180_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_update_value_bool_1_fu_293_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_update_value_bool_fu_251_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_update_value_int_2_fu_180_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_update_value_int_1_fu_227_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_update_value_int_fu_239_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and ((icmp_ln162_1_fu_338_p2 = ap_const_lv1_1) or (icmp_ln162_reg_373 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln149_fu_323_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln149_fu_323_p2 = ap_const_lv1_0)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln149_fu_323_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln149_fu_323_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_307_p2 <= std_logic_vector(signed(i_1_reg_169) + signed(ap_const_lv32_1));
    grp_update_value_bool_1_fu_293_ap_start <= grp_update_value_bool_1_fu_293_ap_start_reg;
    grp_update_value_bool_2_fu_279_ap_start <= grp_update_value_bool_2_fu_279_ap_start_reg;
    grp_update_value_bool_3_fu_265_ap_start <= grp_update_value_bool_3_fu_265_ap_start_reg;
    grp_update_value_bool_fu_251_ap_start <= grp_update_value_bool_fu_251_ap_start_reg;
    grp_update_value_int_1_fu_227_ap_start <= grp_update_value_int_1_fu_227_ap_start_reg;
    grp_update_value_int_2_fu_180_ap_start <= grp_update_value_int_2_fu_180_ap_start_reg;

    grp_update_value_int_2_fu_180_keep_max_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_update_value_int_2_fu_180_keep_max <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_update_value_int_2_fu_180_keep_max <= ap_const_logic_0;
        else 
            grp_update_value_int_2_fu_180_keep_max <= 'X';
        end if; 
    end process;


    grp_update_value_int_2_fu_180_key_q0_assign_proc : process(p_str7_q0, p_str10_q0, ap_CS_fsm_state13, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_update_value_int_2_fu_180_key_q0 <= p_str10_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_update_value_int_2_fu_180_key_q0 <= p_str7_q0;
        else 
            grp_update_value_int_2_fu_180_key_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_update_value_int_2_fu_180_val_read_assign_proc : process(iscsi_connection_parameter_first_burst_length_i, iscsi_connection_parameter_default_time_2_wait_i, ap_CS_fsm_state13, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_update_value_int_2_fu_180_val_read <= iscsi_connection_parameter_default_time_2_wait_i;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_update_value_int_2_fu_180_val_read <= iscsi_connection_parameter_first_burst_length_i;
        else 
            grp_update_value_int_2_fu_180_val_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_update_value_int_3_fu_199_ap_start <= grp_update_value_int_3_fu_199_ap_start_reg;

    grp_update_value_int_3_fu_199_key_q0_assign_proc : process(p_str36_q0, p_str6_q0, ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_update_value_int_3_fu_199_key_q0 <= p_str6_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_update_value_int_3_fu_199_key_q0 <= p_str36_q0;
        else 
            grp_update_value_int_3_fu_199_key_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_update_value_int_3_fu_199_val_read_assign_proc : process(iscsi_connection_parameter_max_connections_i, iscsi_connection_parameter_max_burst_length_i, ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_update_value_int_3_fu_199_val_read <= iscsi_connection_parameter_max_burst_length_i;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_update_value_int_3_fu_199_val_read <= iscsi_connection_parameter_max_connections_i;
        else 
            grp_update_value_int_3_fu_199_val_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_update_value_int_4_fu_215_ap_start <= grp_update_value_int_4_fu_215_ap_start_reg;
    grp_update_value_int_fu_239_ap_start <= grp_update_value_int_fu_239_ap_start_reg;
    icmp_ln149_fu_323_p2 <= "1" when (signed(i_0_reg_157) < signed(zext_ln148_reg_344)) else "0";
    icmp_ln162_1_fu_338_p2 <= "1" when (iscsi_connection_parameter_data_q0 = ap_const_lv8_0) else "0";
    icmp_ln162_fu_328_p2 <= "1" when (signed(i_1_reg_169) < signed(zext_ln148_reg_344)) else "0";

    iscsi_connection_parameter_data_address0_assign_proc : process(ap_CS_fsm_state24, grp_update_value_int_2_fu_180_iscsi_connection_parameter_data_address0, grp_update_value_int_3_fu_199_iscsi_connection_parameter_data_address0, grp_update_value_int_4_fu_215_iscsi_connection_parameter_data_address0, grp_update_value_int_1_fu_227_iscsi_connection_parameter_data_address0, grp_update_value_int_fu_239_iscsi_connection_parameter_data_address0, grp_update_value_bool_fu_251_iscsi_connection_parameter_data_address0, grp_update_value_bool_3_fu_265_iscsi_connection_parameter_data_address0, grp_update_value_bool_2_fu_279_iscsi_connection_parameter_data_address0, grp_update_value_bool_1_fu_293_iscsi_connection_parameter_data_address0, ap_CS_fsm_state23, ap_CS_fsm_state13, ap_CS_fsm_state19, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state3, ap_CS_fsm_state21, ap_CS_fsm_state17, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state15, sext_ln162_fu_333_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            iscsi_connection_parameter_data_address0 <= sext_ln162_fu_333_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            iscsi_connection_parameter_data_address0 <= grp_update_value_bool_1_fu_293_iscsi_connection_parameter_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            iscsi_connection_parameter_data_address0 <= grp_update_value_bool_2_fu_279_iscsi_connection_parameter_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            iscsi_connection_parameter_data_address0 <= grp_update_value_bool_3_fu_265_iscsi_connection_parameter_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            iscsi_connection_parameter_data_address0 <= grp_update_value_bool_fu_251_iscsi_connection_parameter_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            iscsi_connection_parameter_data_address0 <= grp_update_value_int_fu_239_iscsi_connection_parameter_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            iscsi_connection_parameter_data_address0 <= grp_update_value_int_1_fu_227_iscsi_connection_parameter_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            iscsi_connection_parameter_data_address0 <= grp_update_value_int_4_fu_215_iscsi_connection_parameter_data_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            iscsi_connection_parameter_data_address0 <= grp_update_value_int_3_fu_199_iscsi_connection_parameter_data_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            iscsi_connection_parameter_data_address0 <= grp_update_value_int_2_fu_180_iscsi_connection_parameter_data_address0;
        else 
            iscsi_connection_parameter_data_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    iscsi_connection_parameter_data_ce0_assign_proc : process(ap_CS_fsm_state24, grp_update_value_int_2_fu_180_iscsi_connection_parameter_data_ce0, grp_update_value_int_3_fu_199_iscsi_connection_parameter_data_ce0, grp_update_value_int_4_fu_215_iscsi_connection_parameter_data_ce0, grp_update_value_int_1_fu_227_iscsi_connection_parameter_data_ce0, grp_update_value_int_fu_239_iscsi_connection_parameter_data_ce0, grp_update_value_bool_fu_251_iscsi_connection_parameter_data_ce0, grp_update_value_bool_3_fu_265_iscsi_connection_parameter_data_ce0, grp_update_value_bool_2_fu_279_iscsi_connection_parameter_data_ce0, grp_update_value_bool_1_fu_293_iscsi_connection_parameter_data_ce0, ap_CS_fsm_state23, ap_CS_fsm_state13, ap_CS_fsm_state19, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state3, ap_CS_fsm_state21, ap_CS_fsm_state17, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            iscsi_connection_parameter_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            iscsi_connection_parameter_data_ce0 <= grp_update_value_bool_1_fu_293_iscsi_connection_parameter_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            iscsi_connection_parameter_data_ce0 <= grp_update_value_bool_2_fu_279_iscsi_connection_parameter_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            iscsi_connection_parameter_data_ce0 <= grp_update_value_bool_3_fu_265_iscsi_connection_parameter_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            iscsi_connection_parameter_data_ce0 <= grp_update_value_bool_fu_251_iscsi_connection_parameter_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            iscsi_connection_parameter_data_ce0 <= grp_update_value_int_fu_239_iscsi_connection_parameter_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            iscsi_connection_parameter_data_ce0 <= grp_update_value_int_1_fu_227_iscsi_connection_parameter_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            iscsi_connection_parameter_data_ce0 <= grp_update_value_int_4_fu_215_iscsi_connection_parameter_data_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            iscsi_connection_parameter_data_ce0 <= grp_update_value_int_3_fu_199_iscsi_connection_parameter_data_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            iscsi_connection_parameter_data_ce0 <= grp_update_value_int_2_fu_180_iscsi_connection_parameter_data_ce0;
        else 
            iscsi_connection_parameter_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iscsi_connection_parameter_data_pdu_in_order_o_assign_proc : process(iscsi_connection_parameter_data_pdu_in_order_i, grp_update_value_bool_1_fu_293_val_r_o, grp_update_value_bool_1_fu_293_val_r_o_ap_vld, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_update_value_bool_1_fu_293_val_r_o_ap_vld = ap_const_logic_1))) then 
            iscsi_connection_parameter_data_pdu_in_order_o <= grp_update_value_bool_1_fu_293_val_r_o;
        else 
            iscsi_connection_parameter_data_pdu_in_order_o <= iscsi_connection_parameter_data_pdu_in_order_i;
        end if; 
    end process;

    iscsi_connection_parameter_data_pdu_in_order_o_ap_vld <= grp_update_value_bool_1_fu_293_val_r_o_ap_vld;

    iscsi_connection_parameter_data_sequence_in_order_o_assign_proc : process(iscsi_connection_parameter_data_sequence_in_order_i, grp_update_value_bool_fu_251_val_r_o, grp_update_value_bool_fu_251_val_r_o_ap_vld, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_update_value_bool_fu_251_val_r_o_ap_vld = ap_const_logic_1))) then 
            iscsi_connection_parameter_data_sequence_in_order_o <= grp_update_value_bool_fu_251_val_r_o;
        else 
            iscsi_connection_parameter_data_sequence_in_order_o <= iscsi_connection_parameter_data_sequence_in_order_i;
        end if; 
    end process;

    iscsi_connection_parameter_data_sequence_in_order_o_ap_vld <= grp_update_value_bool_fu_251_val_r_o_ap_vld;

    iscsi_connection_parameter_default_time_2_retain_o_assign_proc : process(iscsi_connection_parameter_default_time_2_retain_i, grp_update_value_int_1_fu_227_val_r_o, grp_update_value_int_1_fu_227_val_r_o_ap_vld, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_update_value_int_1_fu_227_val_r_o_ap_vld = ap_const_logic_1))) then 
            iscsi_connection_parameter_default_time_2_retain_o <= grp_update_value_int_1_fu_227_val_r_o;
        else 
            iscsi_connection_parameter_default_time_2_retain_o <= iscsi_connection_parameter_default_time_2_retain_i;
        end if; 
    end process;

    iscsi_connection_parameter_default_time_2_retain_o_ap_vld <= grp_update_value_int_1_fu_227_val_r_o_ap_vld;

    iscsi_connection_parameter_default_time_2_wait_o_assign_proc : process(iscsi_connection_parameter_default_time_2_wait_i, grp_update_value_int_2_fu_180_ap_done, grp_update_value_int_2_fu_180_ap_return, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_update_value_int_2_fu_180_ap_done = ap_const_logic_1))) then 
            iscsi_connection_parameter_default_time_2_wait_o <= grp_update_value_int_2_fu_180_ap_return;
        else 
            iscsi_connection_parameter_default_time_2_wait_o <= iscsi_connection_parameter_default_time_2_wait_i;
        end if; 
    end process;


    iscsi_connection_parameter_default_time_2_wait_o_ap_vld_assign_proc : process(grp_update_value_int_2_fu_180_ap_done, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_update_value_int_2_fu_180_ap_done = ap_const_logic_1))) then 
            iscsi_connection_parameter_default_time_2_wait_o_ap_vld <= ap_const_logic_1;
        else 
            iscsi_connection_parameter_default_time_2_wait_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    iscsi_connection_parameter_first_burst_length_o_assign_proc : process(iscsi_connection_parameter_first_burst_length_i, grp_update_value_int_2_fu_180_ap_done, grp_update_value_int_2_fu_180_ap_return, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_update_value_int_2_fu_180_ap_done = ap_const_logic_1))) then 
            iscsi_connection_parameter_first_burst_length_o <= grp_update_value_int_2_fu_180_ap_return;
        else 
            iscsi_connection_parameter_first_burst_length_o <= iscsi_connection_parameter_first_burst_length_i;
        end if; 
    end process;


    iscsi_connection_parameter_first_burst_length_o_ap_vld_assign_proc : process(grp_update_value_int_2_fu_180_ap_done, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_update_value_int_2_fu_180_ap_done = ap_const_logic_1))) then 
            iscsi_connection_parameter_first_burst_length_o_ap_vld <= ap_const_logic_1;
        else 
            iscsi_connection_parameter_first_burst_length_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    iscsi_connection_parameter_immediate_data_o_assign_proc : process(iscsi_connection_parameter_immediate_data_i, grp_update_value_bool_2_fu_279_val_r_o, grp_update_value_bool_2_fu_279_val_r_o_ap_vld, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_update_value_bool_2_fu_279_val_r_o_ap_vld = ap_const_logic_1))) then 
            iscsi_connection_parameter_immediate_data_o <= grp_update_value_bool_2_fu_279_val_r_o;
        else 
            iscsi_connection_parameter_immediate_data_o <= iscsi_connection_parameter_immediate_data_i;
        end if; 
    end process;

    iscsi_connection_parameter_immediate_data_o_ap_vld <= grp_update_value_bool_2_fu_279_val_r_o_ap_vld;

    iscsi_connection_parameter_initial_r2t_o_assign_proc : process(iscsi_connection_parameter_initial_r2t_i, grp_update_value_bool_3_fu_265_val_r_o, grp_update_value_bool_3_fu_265_val_r_o_ap_vld, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_update_value_bool_3_fu_265_val_r_o_ap_vld = ap_const_logic_1))) then 
            iscsi_connection_parameter_initial_r2t_o <= grp_update_value_bool_3_fu_265_val_r_o;
        else 
            iscsi_connection_parameter_initial_r2t_o <= iscsi_connection_parameter_initial_r2t_i;
        end if; 
    end process;

    iscsi_connection_parameter_initial_r2t_o_ap_vld <= grp_update_value_bool_3_fu_265_val_r_o_ap_vld;

    iscsi_connection_parameter_max_burst_length_o_assign_proc : process(iscsi_connection_parameter_max_burst_length_i, grp_update_value_int_3_fu_199_ap_done, grp_update_value_int_3_fu_199_ap_return, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_update_value_int_3_fu_199_ap_done = ap_const_logic_1))) then 
            iscsi_connection_parameter_max_burst_length_o <= grp_update_value_int_3_fu_199_ap_return;
        else 
            iscsi_connection_parameter_max_burst_length_o <= iscsi_connection_parameter_max_burst_length_i;
        end if; 
    end process;


    iscsi_connection_parameter_max_burst_length_o_ap_vld_assign_proc : process(grp_update_value_int_3_fu_199_ap_done, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_update_value_int_3_fu_199_ap_done = ap_const_logic_1))) then 
            iscsi_connection_parameter_max_burst_length_o_ap_vld <= ap_const_logic_1;
        else 
            iscsi_connection_parameter_max_burst_length_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    iscsi_connection_parameter_max_connections_o_assign_proc : process(iscsi_connection_parameter_max_connections_i, grp_update_value_int_3_fu_199_ap_done, grp_update_value_int_3_fu_199_ap_return, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_update_value_int_3_fu_199_ap_done = ap_const_logic_1))) then 
            iscsi_connection_parameter_max_connections_o <= grp_update_value_int_3_fu_199_ap_return;
        else 
            iscsi_connection_parameter_max_connections_o <= iscsi_connection_parameter_max_connections_i;
        end if; 
    end process;


    iscsi_connection_parameter_max_connections_o_ap_vld_assign_proc : process(grp_update_value_int_3_fu_199_ap_done, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_update_value_int_3_fu_199_ap_done = ap_const_logic_1))) then 
            iscsi_connection_parameter_max_connections_o_ap_vld <= ap_const_logic_1;
        else 
            iscsi_connection_parameter_max_connections_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    iscsi_connection_parameter_max_outstanding_r2t_o_assign_proc : process(iscsi_connection_parameter_max_outstanding_r2t_i, grp_update_value_int_fu_239_val_r_o, grp_update_value_int_fu_239_val_r_o_ap_vld, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_update_value_int_fu_239_val_r_o_ap_vld = ap_const_logic_1))) then 
            iscsi_connection_parameter_max_outstanding_r2t_o <= grp_update_value_int_fu_239_val_r_o;
        else 
            iscsi_connection_parameter_max_outstanding_r2t_o <= iscsi_connection_parameter_max_outstanding_r2t_i;
        end if; 
    end process;

    iscsi_connection_parameter_max_outstanding_r2t_o_ap_vld <= grp_update_value_int_fu_239_val_r_o_ap_vld;

    iscsi_connection_parameter_max_receive_data_segment_length_o_assign_proc : process(iscsi_connection_parameter_max_receive_data_segment_length_i, grp_update_value_int_4_fu_215_val_r_o, grp_update_value_int_4_fu_215_val_r_o_ap_vld, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_update_value_int_4_fu_215_val_r_o_ap_vld = ap_const_logic_1))) then 
            iscsi_connection_parameter_max_receive_data_segment_length_o <= grp_update_value_int_4_fu_215_val_r_o;
        else 
            iscsi_connection_parameter_max_receive_data_segment_length_o <= iscsi_connection_parameter_max_receive_data_segment_length_i;
        end if; 
    end process;

    iscsi_connection_parameter_max_receive_data_segment_length_o_ap_vld <= grp_update_value_int_4_fu_215_val_r_o_ap_vld;

    p_str10_ce0_assign_proc : process(grp_update_value_int_2_fu_180_key_ce0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_str10_ce0 <= grp_update_value_int_2_fu_180_key_ce0;
        else 
            p_str10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_str36_ce0_assign_proc : process(grp_update_value_int_3_fu_199_key_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_str36_ce0 <= grp_update_value_int_3_fu_199_key_ce0;
        else 
            p_str36_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_str6_ce0_assign_proc : process(grp_update_value_int_3_fu_199_key_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_str6_ce0 <= grp_update_value_int_3_fu_199_key_ce0;
        else 
            p_str6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_str7_ce0_assign_proc : process(grp_update_value_int_2_fu_180_key_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_str7_ce0 <= grp_update_value_int_2_fu_180_key_ce0;
        else 
            p_str7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln162_fu_333_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i_1_reg_169),64));

    zext_ln148_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iscsi_connection_parameter_data_length_read),32));
end behav;
